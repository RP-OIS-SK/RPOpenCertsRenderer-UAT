{"ast":null,"code":"var _jsxFileName = \"/OpenCerts/opencerts-renderer/src/components/attachmentTemplates/index.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PdfRenderer from \"./pdfRenderer\";\nimport NullRenderer from \"./nullRenderer\"; // Generates a template function depending on attachment type\n\nexport const attachmentTemplateSelector = ({\n  attachment,\n  handleHeightUpdate\n}) => {\n  const {\n    type\n  } = attachment;\n  let AttachmentRenderer;\n\n  switch (type) {\n    case \"application/pdf\":\n      AttachmentRenderer = PdfRenderer;\n      break;\n\n    default:\n      AttachmentRenderer = NullRenderer;\n  }\n\n  const template = () => /*#__PURE__*/React.createElement(AttachmentRenderer, {\n    attachment: attachment,\n    handleHeightUpdate: handleHeightUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  });\n\n  return template;\n};\nattachmentTemplateSelector.propTypes = {\n  attachment: PropTypes.object.isRequired,\n  handleHeightUpdate: PropTypes.func.isRequired\n};\n\nconst attachmentToTemplates = (attachments, handleHeightUpdate) => {\n  return attachments.map((attachment, index) => {\n    return {\n      id: `attachment-${index}`,\n      label: attachment.filename,\n      template: attachmentTemplateSelector({\n        attachment,\n        handleHeightUpdate\n      })\n    };\n  });\n};\n\nexport default attachmentToTemplates;","map":{"version":3,"sources":["/OpenCerts/opencerts-renderer/src/components/attachmentTemplates/index.js"],"names":["React","PropTypes","PdfRenderer","NullRenderer","attachmentTemplateSelector","attachment","handleHeightUpdate","type","AttachmentRenderer","template","propTypes","object","isRequired","func","attachmentToTemplates","attachments","map","index","id","label","filename"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAEA;;AACA,OAAO,MAAMC,0BAA0B,GAAG,CAAC;AACzCC,EAAAA,UADyC;AAEzCC,EAAAA;AAFyC,CAAD,KAGpC;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAWF,UAAjB;AACA,MAAIG,kBAAJ;;AAEA,UAAQD,IAAR;AACE,SAAK,iBAAL;AACEC,MAAAA,kBAAkB,GAAGN,WAArB;AACA;;AACF;AACEM,MAAAA,kBAAkB,GAAGL,YAArB;AALJ;;AAQA,QAAMM,QAAQ,GAAG,mBACf,oBAAC,kBAAD;AACE,IAAA,UAAU,EAAEJ,UADd;AAEE,IAAA,kBAAkB,EAAEC,kBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;;AAOA,SAAOG,QAAP;AACD,CAvBM;AAyBPL,0BAA0B,CAACM,SAA3B,GAAuC;AACrCL,EAAAA,UAAU,EAAEJ,SAAS,CAACU,MAAV,CAAiBC,UADQ;AAErCN,EAAAA,kBAAkB,EAAEL,SAAS,CAACY,IAAV,CAAeD;AAFE,CAAvC;;AAKA,MAAME,qBAAqB,GAAG,CAACC,WAAD,EAAcT,kBAAd,KAAqC;AACjE,SAAOS,WAAW,CAACC,GAAZ,CAAgB,CAACX,UAAD,EAAaY,KAAb,KAAuB;AAC5C,WAAO;AACLC,MAAAA,EAAE,EAAG,cAAaD,KAAM,EADnB;AAELE,MAAAA,KAAK,EAAEd,UAAU,CAACe,QAFb;AAGLX,MAAAA,QAAQ,EAAEL,0BAA0B,CAAC;AAAEC,QAAAA,UAAF;AAAcC,QAAAA;AAAd,OAAD;AAH/B,KAAP;AAKD,GANM,CAAP;AAOD,CARD;;AAUA,eAAeQ,qBAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PdfRenderer from \"./pdfRenderer\";\nimport NullRenderer from \"./nullRenderer\";\n\n// Generates a template function depending on attachment type\nexport const attachmentTemplateSelector = ({\n  attachment,\n  handleHeightUpdate\n}) => {\n  const { type } = attachment;\n  let AttachmentRenderer;\n\n  switch (type) {\n    case \"application/pdf\":\n      AttachmentRenderer = PdfRenderer;\n      break;\n    default:\n      AttachmentRenderer = NullRenderer;\n  }\n\n  const template = () => (\n    <AttachmentRenderer\n      attachment={attachment}\n      handleHeightUpdate={handleHeightUpdate}\n    />\n  );\n\n  return template;\n};\n\nattachmentTemplateSelector.propTypes = {\n  attachment: PropTypes.object.isRequired,\n  handleHeightUpdate: PropTypes.func.isRequired\n};\n\nconst attachmentToTemplates = (attachments, handleHeightUpdate) => {\n  return attachments.map((attachment, index) => {\n    return {\n      id: `attachment-${index}`,\n      label: attachment.filename,\n      template: attachmentTemplateSelector({ attachment, handleHeightUpdate })\n    };\n  });\n};\n\nexport default attachmentToTemplates;\n"]},"metadata":{},"sourceType":"module"}