{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getModuleName;\n\nfunction getModuleName(rootOpts, pluginOpts) {\n  var _pluginOpts$moduleRoo, _rootOpts$moduleIds, _rootOpts$moduleRoot;\n\n  var filename = rootOpts.filename,\n      _rootOpts$filenameRel = rootOpts.filenameRelative,\n      filenameRelative = _rootOpts$filenameRel === void 0 ? filename : _rootOpts$filenameRel,\n      _rootOpts$sourceRoot = rootOpts.sourceRoot,\n      sourceRoot = _rootOpts$sourceRoot === void 0 ? (_pluginOpts$moduleRoo = pluginOpts.moduleRoot) != null ? _pluginOpts$moduleRoo : rootOpts.moduleRoot : _rootOpts$sourceRoot;\n  var _pluginOpts$moduleId = pluginOpts.moduleId,\n      moduleId = _pluginOpts$moduleId === void 0 ? rootOpts.moduleId : _pluginOpts$moduleId,\n      _pluginOpts$moduleIds = pluginOpts.moduleIds,\n      moduleIds = _pluginOpts$moduleIds === void 0 ? (_rootOpts$moduleIds = rootOpts.moduleIds) != null ? _rootOpts$moduleIds : !!moduleId : _pluginOpts$moduleIds,\n      _pluginOpts$getModule = pluginOpts.getModuleId,\n      getModuleId = _pluginOpts$getModule === void 0 ? rootOpts.getModuleId : _pluginOpts$getModule,\n      _pluginOpts$moduleRoo2 = pluginOpts.moduleRoot,\n      moduleRoot = _pluginOpts$moduleRoo2 === void 0 ? (_rootOpts$moduleRoot = rootOpts.moduleRoot) != null ? _rootOpts$moduleRoot : sourceRoot : _pluginOpts$moduleRoo2;\n  if (!moduleIds) return null;\n\n  if (moduleId != null && !getModuleId) {\n    return moduleId;\n  }\n\n  var moduleName = moduleRoot != null ? moduleRoot + \"/\" : \"\";\n\n  if (filenameRelative) {\n    var sourceRootReplacer = sourceRoot != null ? new RegExp(\"^\" + sourceRoot + \"/?\") : \"\";\n    moduleName += filenameRelative.replace(sourceRootReplacer, \"\").replace(/\\.(\\w*?)$/, \"\");\n  }\n\n  moduleName = moduleName.replace(/\\\\/g, \"/\");\n\n  if (getModuleId) {\n    return getModuleId(moduleName) || moduleName;\n  } else {\n    return moduleName;\n  }\n}","map":{"version":3,"sources":["/OpenCerts/demo-opencerts-renderer/node_modules/@babel/helper-module-transforms/lib/get-module-name.js"],"names":["Object","defineProperty","exports","value","default","getModuleName","rootOpts","pluginOpts","_pluginOpts$moduleRoo","_rootOpts$moduleIds","_rootOpts$moduleRoot","filename","filenameRelative","sourceRoot","moduleRoot","moduleId","moduleIds","getModuleId","moduleName","sourceRootReplacer","RegExp","replace"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,aAAlB;;AAEA,SAASA,aAAT,CAAuBC,QAAvB,EAAiCC,UAAjC,EAA6C;AAC3C,MAAIC,qBAAJ,EAA2BC,mBAA3B,EAAgDC,oBAAhD;;AAD2C,MAIzCC,QAJyC,GAOvCL,QAPuC,CAIzCK,QAJyC;AAAA,8BAOvCL,QAPuC,CAKzCM,gBALyC;AAAA,MAKzCA,gBALyC,sCAKtBD,QALsB;AAAA,6BAOvCL,QAPuC,CAMzCO,UANyC;AAAA,MAMzCA,UANyC,qCAM5B,CAACL,qBAAqB,GAAGD,UAAU,CAACO,UAApC,KAAmD,IAAnD,GAA0DN,qBAA1D,GAAkFF,QAAQ,CAACQ,UAN/D;AAAA,6BAavCP,UAbuC,CASzCQ,QATyC;AAAA,MASzCA,QATyC,qCAS9BT,QAAQ,CAACS,QATqB;AAAA,8BAavCR,UAbuC,CAUzCS,SAVyC;AAAA,MAUzCA,SAVyC,sCAU7B,CAACP,mBAAmB,GAAGH,QAAQ,CAACU,SAAhC,KAA8C,IAA9C,GAAqDP,mBAArD,GAA2E,CAAC,CAACM,QAVhD;AAAA,8BAavCR,UAbuC,CAWzCU,WAXyC;AAAA,MAWzCA,WAXyC,sCAW3BX,QAAQ,CAACW,WAXkB;AAAA,+BAavCV,UAbuC,CAYzCO,UAZyC;AAAA,MAYzCA,UAZyC,uCAY5B,CAACJ,oBAAoB,GAAGJ,QAAQ,CAACQ,UAAjC,KAAgD,IAAhD,GAAuDJ,oBAAvD,GAA8EG,UAZlD;AAc3C,MAAI,CAACG,SAAL,EAAgB,OAAO,IAAP;;AAEhB,MAAID,QAAQ,IAAI,IAAZ,IAAoB,CAACE,WAAzB,EAAsC;AACpC,WAAOF,QAAP;AACD;;AAED,MAAIG,UAAU,GAAGJ,UAAU,IAAI,IAAd,GAAqBA,UAAU,GAAG,GAAlC,GAAwC,EAAzD;;AAEA,MAAIF,gBAAJ,EAAsB;AACpB,QAAMO,kBAAkB,GAAGN,UAAU,IAAI,IAAd,GAAqB,IAAIO,MAAJ,CAAW,MAAMP,UAAN,GAAmB,IAA9B,CAArB,GAA2D,EAAtF;AACAK,IAAAA,UAAU,IAAIN,gBAAgB,CAACS,OAAjB,CAAyBF,kBAAzB,EAA6C,EAA7C,EAAiDE,OAAjD,CAAyD,WAAzD,EAAsE,EAAtE,CAAd;AACD;;AAEDH,EAAAA,UAAU,GAAGA,UAAU,CAACG,OAAX,CAAmB,KAAnB,EAA0B,GAA1B,CAAb;;AAEA,MAAIJ,WAAJ,EAAiB;AACf,WAAOA,WAAW,CAACC,UAAD,CAAX,IAA2BA,UAAlC;AACD,GAFD,MAEO;AACL,WAAOA,UAAP;AACD;AACF","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getModuleName;\n\nfunction getModuleName(rootOpts, pluginOpts) {\n  var _pluginOpts$moduleRoo, _rootOpts$moduleIds, _rootOpts$moduleRoot;\n\n  const {\n    filename,\n    filenameRelative = filename,\n    sourceRoot = (_pluginOpts$moduleRoo = pluginOpts.moduleRoot) != null ? _pluginOpts$moduleRoo : rootOpts.moduleRoot\n  } = rootOpts;\n  const {\n    moduleId = rootOpts.moduleId,\n    moduleIds = (_rootOpts$moduleIds = rootOpts.moduleIds) != null ? _rootOpts$moduleIds : !!moduleId,\n    getModuleId = rootOpts.getModuleId,\n    moduleRoot = (_rootOpts$moduleRoot = rootOpts.moduleRoot) != null ? _rootOpts$moduleRoot : sourceRoot\n  } = pluginOpts;\n  if (!moduleIds) return null;\n\n  if (moduleId != null && !getModuleId) {\n    return moduleId;\n  }\n\n  let moduleName = moduleRoot != null ? moduleRoot + \"/\" : \"\";\n\n  if (filenameRelative) {\n    const sourceRootReplacer = sourceRoot != null ? new RegExp(\"^\" + sourceRoot + \"/?\") : \"\";\n    moduleName += filenameRelative.replace(sourceRootReplacer, \"\").replace(/\\.(\\w*?)$/, \"\");\n  }\n\n  moduleName = moduleName.replace(/\\\\/g, \"/\");\n\n  if (getModuleId) {\n    return getModuleId(moduleName) || moduleName;\n  } else {\n    return moduleName;\n  }\n}"]},"metadata":{},"sourceType":"script"}