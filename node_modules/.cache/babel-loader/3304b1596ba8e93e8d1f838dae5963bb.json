{"ast":null,"code":"var _jsxFileName = \"/Users/Shared/opencerts/UAT-opencerts-renderer/src/components/templates/RPTemplate/common/transcript.js\";\nimport PropTypes from \"prop-types\";\nimport { get, groupBy } from \"lodash\";\nimport React from \"react\";\nimport { IMG_LOGO_RP_HORIZONTAL, IMG_LOGO_RP_HORIZONTAL24 } from \"./images\";\nimport { formatDDMMMYYYY, formatBold, formatSignatoriesPosition } from \"./functions\";\nexport const fullWidthStyle = {\n  width: \"100%\",\n  height: \"auto\"\n};\nexport const fullTableWidthStyle = {\n  width: \"100%\",\n  border: \"1px solid black\",\n  height: \"auto\"\n};\nexport const thWidth60Left = {\n  width: \"60%\",\n  textAlign: \"left\"\n};\nexport const signatureTextStyle = {\n  color: \"#050\",\n  fontSize: \"1.0rem\"\n};\nexport const titleTextStyle = {\n  fontSize: \"2.0rem\",\n  textAlign: \"center\",\n  fontWeight: \"bold\"\n};\nexport const boxStyle = {\n  border: 2,\n  borderColor: \"#AAA\",\n  borderStyle: \"solid\",\n  textAlign: \"center\"\n}; // additional remarks for PET only\n// 2025 added changes for second line.\n\nexport const renderRemarksGradingSystem = (is2020, isDisplayOldCETLegend, isBf2025) => /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }\n}), isDisplayOldCETLegend ? null : isBf2025 ? \"Incomplete Grade is implemented from Academic Year 2012 Semester 2 onwards.\\n\" : \"Incomplete Grade is implemented for full-time diplomas from Academic Year 2012 Semester 2 onwards.\\n\", !isDisplayOldCETLegend && /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 32\n  }\n}), isDisplayOldCETLegend ? \"Non-Graded Pass Grade is implemented from March 2022 onwards.\" : \"Non-Graded Pass Grade is implemented from Academic Year 2020 onwards.\", /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }\n}), isDisplayOldCETLegend ? null : \"A module for which grade point or modular credit is not accorded will not be considered in the computation of the cGPA.\\n\");\nexport const renderTableHeader = isPFP => /*#__PURE__*/React.createElement(\"tr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"th\", {\n  style: {\n    width: \"25%\",\n    textDecoration: \"underline\",\n    paddingLeft: \"10px\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }\n}, \"Grade\"), isPFP ? /*#__PURE__*/React.createElement(\"th\", {\n  style: {\n    width: \"25%\",\n    textDecoration: \"underline\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 7\n  }\n}) : /*#__PURE__*/React.createElement(\"th\", {\n  style: {\n    width: \"25%\",\n    textDecoration: \"underline\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 7\n  }\n}, \"Point\"), /*#__PURE__*/React.createElement(\"th\", {\n  style: {\n    width: \"50%\",\n    textDecoration: \"underline\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }\n}, \"Description\"));\nexport const renderBlankLine = () => /*#__PURE__*/React.createElement(\"tr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"td\", {\n  style: {\n    paddingLeft: \"10px\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }\n}, \"\\xA0\", /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }\n}, \"\\xA0\"), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }\n}, \"\\xA0\"));\nexport const renderGradeList = listGrade => {\n  const strList = listGrade.map((obj, i) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      paddingLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, obj.grade), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, obj.score), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, obj.desc)));\n  return strList;\n};\nexport const renderHeader = document => {\n  const strTemplate = get(document, \"$template.name\"); // check it is PET template  - position 16 for scheme 1.4, position 9 for scheme 2.0\n  //const isCET = strTemplate.substr(8, 6) === \"P_MAIN\" ? 0 : 1;\n\n  const isCET = strTemplate.substr(8, 2) === \"C_\" ? 1 : 0;\n  const isPET = !isCET; //const isPFP = strTemplate.substr(8, 5) === \"P_PFP\" ? 1 : 0;\n\n  /* const isBefore2023 =\n    strTemplate.substr(3, 4) === \"2020\" ||\n    strTemplate.substr(3, 4) === \"2021\" ||\n    strTemplate.substr(3, 4) === \"2022\"\n      ? 1\n      : 0;\n    */\n\n  const isBefore2024 = strTemplate.substr(3, 4) === \"2006\" || strTemplate.substr(3, 4) === \"2010\" || strTemplate.substr(3, 4) === \"2020\" || strTemplate.substr(3, 4) === \"2021\" || strTemplate.substr(3, 4) === \"2022\" || strTemplate.substr(3, 4) === \"2023\" ? 1 : 0;\n  const isBefore2025 = isBefore2024 || strTemplate.substr(3, 4) === \"2024\" ? 1 : 0;\n  const isDisplayNewLogo = isCET && isBefore2024 || isPET && isBefore2025 ? 0 : 1;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: fullWidthStyle,\n    src: isDisplayNewLogo ? IMG_LOGO_RP_HORIZONTAL24 : IMG_LOGO_RP_HORIZONTAL,\n    alt: \"RP Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: titleTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, \"TRANSCRIPT OF ACADEMIC RECORD\")));\n};\nexport const renderGradingSystem = document => {\n  // get the template name\n  const strTemplate = get(document, \"$template.name\"); // check it is PET template  - position 16 for scheme 1.4, position 9 for scheme 2.0\n  //const isCET = strTemplate.substr(8, 6) === \"P_MAIN\" ? 0 : 1;\n\n  const isCET = strTemplate.substr(8, 2) === \"C_\" ? 1 : 0;\n  const isPFP = strTemplate.substr(8, 5) === \"P_PFP\" ? 1 : 0; // RP_ 2022_P_ PFP\n  // 0 12 3456789 01234\n  // check whether it is DPLUS template\n  // const isNOTDPLUS = strTemplate.substr(8, 4) === \"C_DP\" ? 0 : 1;\n  // RP_2020_P_MAIN\n  // const is2020 = strTemplate.substr(3, 4) === \"2020\" ? 1 : 0;\n  //const is2021or22 =strTemplate.substr(3, 4) === \"2021\" || strTemplate.substr(3, 4) === \"2022\" ? 1 : 0;\n\n  const sYear = strTemplate.substr(3, 4);\n  const isBefore2023 = sYear === \"2020\" || sYear === \"2021\" || sYear === \"2022\" ? 1 : 0;\n  const isBf2025 = sYear === \"2010\" || sYear === \"2020\" || sYear === \"2021\" || sYear === \"2022\" || sYear === \"2023\" || sYear === \"2024\" ? true : false; //check year\n\n  const isDisplayOldCETLegend = isCET && isBefore2023 ? 1 : 0;\n  const listGradeText1L = [{\n    grade: \"A\",\n    score: \"4.0\",\n    desc: \"Excellent\"\n  }, {\n    grade: \"B+\",\n    score: \"3.5\",\n    desc: \"Very Good\"\n  }, {\n    grade: \"B\",\n    score: \"3.0\",\n    desc: \"Good\"\n  }, {\n    grade: \"C+\",\n    score: \"2.5\",\n    desc: \"Satisfactory\"\n  }, {\n    grade: \"C\",\n    score: \"2.0\",\n    desc: \"Acceptable\"\n  }, {\n    grade: \"D+\",\n    score: \"1.5\",\n    desc: \"Conditional Pass\"\n  }, {\n    grade: \"D\",\n    score: \"1.0\",\n    desc: \"Conditional Pass\"\n  }];\n  const listGradeText1RP = [{\n    grade: \"P\",\n    score: \"2.0\",\n    desc: \"Pass\"\n  }, {\n    grade: \"E\",\n    score: \"0.5\",\n    desc: \"Fail\"\n  }, {\n    grade: \"F\",\n    score: \"0.0\",\n    desc: \"Fail\"\n  }, {\n    grade: \"N\",\n    score: \"-\",\n    desc: \"Null(Defaulted)\"\n  }, {\n    grade: \"Pass*\",\n    score: \"-\",\n    desc: \"Pass with Commendation\"\n  }, {\n    grade: \"Pass\",\n    score: \"-\",\n    desc: \"Pass\"\n  }, {\n    grade: \"Fail\",\n    score: \"-\",\n    desc: \"Fail\"\n  }];\n  const listGradeText1R = [{\n    grade: \"P\",\n    score: \"2.0\",\n    desc: \"Pass\"\n  }, {\n    grade: \"E\",\n    score: \"0.5\",\n    desc: \"Fail\"\n  }, {\n    grade: \"F\",\n    score: \"0.0\",\n    desc: \"Fail\"\n  }, {\n    grade: \"N\",\n    score: \"-\",\n    desc: \"Null(Defaulted)\"\n  }, {\n    grade: \"Pass*\",\n    score: \"-\",\n    desc: \"Pass with Commendation\"\n  }, {\n    grade: \"Pass\",\n    score: \"-\",\n    desc: \"Pass\"\n  }, {\n    grade: \"Fail\",\n    score: \"-\",\n    desc: \"Fail\"\n  }];\n  const listGradeText2LP = [{\n    grade: \"DIST\",\n    score: \"4.0\",\n    desc: \"Distinction^\"\n  }, {\n    grade: \"A\",\n    score: \"4.0\",\n    desc: \"Excellent\"\n  }, {\n    grade: \"B+\",\n    score: \"3.5\",\n    desc: \"Very Good\"\n  }, {\n    grade: \"B\",\n    score: \"3.0\",\n    desc: \"Very Good\"\n  }, {\n    grade: \"C+\",\n    score: \"2.5\",\n    desc: \"Good\"\n  }, {\n    grade: \"C\",\n    score: \"2.0\",\n    desc: \"Good\"\n  }, {\n    grade: \"D+\",\n    score: \"1.5\",\n    desc: \"Pass\"\n  }, {\n    grade: \"D\",\n    score: \"1.0\",\n    desc: \"Pass\"\n  }];\n  const listGradeText2RP = [{\n    grade: \"NGP\",\n    score: \"1.0\",\n    desc: \"Non-Graded Pass\"\n  }, {\n    grade: \"F\",\n    score: \"0.0\",\n    desc: \"Fail\"\n  }, {\n    grade: \"Pass*\",\n    score: \"-\",\n    desc: \"Pass with Commendation\"\n  }, {\n    grade: \"Pass\",\n    score: \"-\",\n    desc: \"Pass\"\n  }, {\n    grade: \"Fail\",\n    score: \"-\",\n    desc: \"Fail\"\n  }, {\n    grade: \"Exempted\",\n    score: \"-\",\n    desc: \"Exempted from taking the module\"\n  }, {\n    grade: \"Incomplete\",\n    score: \"-\",\n    desc: \"Incomplete\"\n  }];\n  const listGradeText2LC = [{\n    grade: \"DIST\",\n    score: \"4.0\",\n    desc: \"Distinction^\"\n  }, {\n    grade: \"A\",\n    score: \"4.0\",\n    desc: \"Excellent\"\n  }, {\n    grade: \"B+\",\n    score: \"3.5\",\n    desc: \"Very Good\"\n  }, {\n    grade: \"B\",\n    score: \"3.0\",\n    desc: \"Very Good\"\n  }, {\n    grade: \"C+\",\n    score: \"2.5\",\n    desc: \"Good\"\n  }, {\n    grade: \"C\",\n    score: \"2.0\",\n    desc: \"Good\"\n  }, {\n    grade: \"D+\",\n    score: \"1.5\",\n    desc: \"Pass\"\n  }];\n  const listGradeText2RC = [{\n    grade: \"D\",\n    score: \"1.0\",\n    desc: \"Pass\"\n  }, {\n    grade: \"NGP\",\n    score: \"1.0\",\n    desc: \"Non-Graded Pass\"\n  }, {\n    grade: \"F\",\n    score: \"0.0\",\n    desc: \"Fail\"\n  }, {\n    grade: \"Pass*\",\n    score: \"-\",\n    desc: \"Pass with Commendation\"\n  }, {\n    grade: \"Pass\",\n    score: \"-\",\n    desc: \"Pass\"\n  }, {\n    grade: \"Fail\",\n    score: \"-\",\n    desc: \"Fail\"\n  }, {\n    grade: \"Exempted\",\n    score: \"-\",\n    desc: \"Exempted from taking the module\"\n  }];\n  const listGradeText2LC23 = [{\n    grade: \"DIST\",\n    score: \"4.0\",\n    desc: \"Distinction^\"\n  }, {\n    grade: \"A\",\n    score: \"4.0\",\n    desc: \"Excellent\"\n  }, {\n    grade: \"B+\",\n    score: \"3.5\",\n    desc: \"Very Good\"\n  }, {\n    grade: \"B\",\n    score: \"3.0\",\n    desc: \"Very Good\"\n  }, {\n    grade: \"C+\",\n    score: \"2.5\",\n    desc: \"Good\"\n  }, {\n    grade: \"C\",\n    score: \"2.0\",\n    desc: \"Good\"\n  }, {\n    grade: \"D+\",\n    score: \"1.5\",\n    desc: \"Pass\"\n  }, {\n    grade: \"D\",\n    score: \"1.0\",\n    desc: \"Pass\"\n  }];\n  const listGradeText2RC23 = [{\n    grade: \"NGP\",\n    score: \"1.0\",\n    desc: \"Non-Graded Pass\"\n  }, {\n    grade: \"F\",\n    score: \"0.0\",\n    desc: \"Fail\"\n  }, {\n    grade: \"Pass*\",\n    score: \"-\",\n    desc: \"Pass with Commendation\"\n  }, {\n    grade: \"Pass\",\n    score: \"-\",\n    desc: \"Pass\"\n  }, {\n    grade: \"Fail\",\n    score: \"-\",\n    desc: \"Fail\"\n  }, {\n    grade: \"Exempted/EX\",\n    score: \"-\",\n    desc: \"Exempted from taking the module\"\n  }, {\n    grade: \"Incomplete\",\n    score: \"-\",\n    desc: \"Incomplete\"\n  }, {\n    grade: \"TRF()\",\n    score: \"-\",\n    desc: \"Credit transfer\"\n  }];\n  const listGradeTextPFPL = [{\n    grade: \"DIST\",\n    score: \"\",\n    desc: \"Distinction\"\n  }, {\n    grade: \"A\",\n    score: \"\",\n    desc: \"Excellent\"\n  }, {\n    grade: \"B+\",\n    score: \"\",\n    desc: \"Very Good\"\n  }, {\n    grade: \"B\",\n    score: \"\",\n    desc: \"Very Good\"\n  }, {\n    grade: \"C+\",\n    score: \"\",\n    desc: \"Good\"\n  }];\n  const listGradeTextPFPR = [{\n    grade: \"C\",\n    score: \"\",\n    desc: \"Good\"\n  }, {\n    grade: \"D+\",\n    score: \"\",\n    desc: \"Pass\"\n  }, {\n    grade: \"D\",\n    score: \"\",\n    desc: \"Pass\"\n  }, {\n    grade: \"P\",\n    score: \"\",\n    desc: \"Pass\"\n  }, {\n    grade: \"F\",\n    score: \"\",\n    desc: \"Fail\"\n  }];\n  /*\n  const listGradeTextO2R = [\n    { grade: \"F\", score: \"0.0\", desc: \"Fail\" },\n    { grade: \"Pass*\", score: \"-\", desc: \"Pass with Commendation\" },\n    { grade: \"Pass\", score: \"-\", desc: \"Pass\" },\n    { grade: \"Fail\", score: \"-\", desc: \"Fail\" },\n    { grade: \"Exempted\", score: \"-\", desc: \"Exempted from taking the module\" }\n  ];\n  */\n  // if PET or DPLUS, display grading system otherwise do not display\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    style: {\n      fontSize: \"0.9rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 11\n    }\n  }), isPFP > 0 ? \"Grading System\" : \"Academic Year 2003 to 2010\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    style: fullTableWidthStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 15\n    }\n  }, renderTableHeader(isPFP), isPFP ? renderGradeList(listGradeTextPFPL) : renderGradeList(listGradeText1L)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    style: fullTableWidthStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 15\n    }\n  }, renderTableHeader(isPFP), isPFP ? renderGradeList(listGradeTextPFPR) : isCET ? renderGradeList(listGradeText1R) : renderGradeList(listGradeText1RP))))), isPFP ? null : /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }\n  }), \"Academic Year 2011 onwards\"), isPFP ? null : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    style: fullTableWidthStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 17\n    }\n  }, renderTableHeader(isPFP), isCET ? isBefore2023 ? renderGradeList(listGradeText2LC) : renderGradeList(listGradeText2LC23) : renderGradeList(listGradeText2LP)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    style: fullTableWidthStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 17\n    }\n  }, renderTableHeader(isPFP), isPFP ? null : isCET ? isBefore2023 ? renderGradeList(listGradeText2RC) : renderGradeList(listGradeText2RC23) : isBf2025 ? renderGradeList(listGradeText2RP) : renderGradeList(listGradeText2RC23), isBefore2023 > 3 && /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      paddingLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 23\n    }\n  }, isCET ? \" \" : \"Incomplete\", \" \\xA0\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 23\n    }\n  }, isCET ? null : \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 23\n    }\n  }, isCET ? null : \"Incomplete\")), isBefore2023 > 3 && /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      paddingLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 23\n    }\n  }, isCET ? \" \" : \"NGP\", \" \\xA0\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 23\n    }\n  }, isCET ? null : \"1.0\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 23\n    }\n  }, isCET ? null : \"Non-Graded Pass\")), isCET ? null : isBf2025 ? renderBlankLine() : null)))), isPFP ? null : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 11\n    }\n  }, \"^Distinction is awarded from Academic Year 2012 onwards.\", renderRemarksGradingSystem(isCET, isDisplayOldCETLegend, isBf2025)), isPFP ? null : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    style: {\n      padding: \"5px 5px 5px 5px\",\n      border: \"1px solid black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 15\n    }\n  }, \" \", \"Advanced Placement Credits\", \" \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 15\n    }\n  }), \"Advanced Placement Credits are granted by Republic Polytechnic for modules taken and awarded a passed grade prior to admission to the Polytechnic. In this regard, Republic Polytechnic recognises these modules that are completed either at another educational institution or based on performance placement tests set by the Polytechnic.\")), isPFP ? null : /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 13\n    }\n  }), \"The medium of instruction used in this Polytechnic is English.\")));\n};\nexport const renderCourse = (document, course) => {\n  // Get student info and course description\n  const recipientName = get(document, \"recipient.name\");\n  const recipientNric = get(document, \"recipient.nric\");\n  const recipientFin = get(document, \"recipient.fin\");\n  const recipientNricFin = !recipientNric ? recipientFin : recipientNric;\n  const studentId = get(document, \"recipient.studentId\");\n  const admissionDate = get(document, \"admissionDate\");\n  const graduationDate = get(document, \"graduationDate\");\n  const strTemplate = get(document, \"$template.name\"); //const isCET = strTemplate.substr(8, 2) === \"P_\" ? 0 : 1;\n\n  const isCET = strTemplate.substr(8, 2) === \"C_\" ? 1 : 0; //const isPET = strTemplate.substr(8, 6) === \"P_MAIN\" ? 1 : 0;\n\n  const isPFP = strTemplate.substr(8, 5) === \"P_PFP\" ? 1 : 0;\n  const is2010 = strTemplate === \"RP_2010_P_MAIN\" ? 1 : 0;\n  const isBefore2024 = strTemplate.substr(3, 4) === \"2021\" || strTemplate.substr(3, 4) === \"2022\" || strTemplate.substr(3, 4) === \"2023\" ? 1 : 0;\n  const isCETBefore2024 = isCET && isBefore2024 ? 1 : 0;\n  const isMinCert = strTemplate.substr(8, 7) === \"P_MINOR\" ? 1 : 0;\n  const isPETMinor = strTemplate.substr(8, 7) === \"P_NMAIN\" ? 1 : 0;\n  const courseText = isPFP ? \"Polytechnic Foundation Programme for \" : null;\n  const moduleCodeTitle = isPFP ? \"MODULE CODE\" : \"MODULE\";\n  const moduleTitle = isPFP ? \"MODULE NAME\" : \"\";\n  const minorTitle = isMinCert ? document.name + \" in the \" : \"\"; // Group all modules by semesters\n\n  const groupedSubjects = groupBy(course, \"semester\");\n  const renderedSemesters = Object.keys(groupedSubjects).map(semester => groupedSubjects[semester].map((s, i) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 7\n    }\n  }, isPFP ? null : /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 11\n    }\n  }, i || s.semester === \"-\" ? null : formatBold(s.semester.toString())), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 9\n    }\n  }, s.courseCode !== \"ZZZ\" ? s.courseCode : \"\"), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 9\n    }\n  }, s.courseCode !== \"ZZZ\" || s.semester === \"-\" ? s.name : formatBold(s.name)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 9\n    }\n  }, isPFP || isCETBefore2024 || s.courseCredit === 0 || s.courseCredit === \"0\" ? \"\" : s.courseCredit), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 9\n    }\n  }, s.courseCode !== \"ZZZ\" ? s.grade.padEnd(2, \" \") : \"\", \"\\xA0\"))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 13\n    }\n  }, \":\\xA0\\xA0\", recipientName)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 13\n    }\n  }, \"Course\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 13\n    }\n  }, \":\\xA0\\xA0\", courseText, isMinCert ? minorTitle : \"\", isMinCert || isPETMinor ? document.description : document.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 13\n    }\n  }, \"NRIC/FIN\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 13\n    }\n  }, \":\\xA0\\xA0\", recipientNricFin), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4 justify-content-right\",\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 13\n    }\n  }, isMinCert ? \"\" : \"Date of Admission:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-2 justify-content-right\",\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 13\n    }\n  }, isMinCert ? \"\" : formatDDMMMYYYY(admissionDate))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 13\n    }\n  }, \"Student ID\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 13\n    }\n  }, \":\\xA0\\xA0\", studentId || document.additionalData.studentId), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4 justify-content-right\",\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 13\n    }\n  }, \"Date of\", \" \", isMinCert ? \"Endorsement\" : is2010 ? \"Graduation\" : \"Endorsement\", \":\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-2 justify-content-right\",\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 13\n    }\n  }, formatDDMMMYYYY(graduationDate))))), /*#__PURE__*/React.createElement(\"hr\", {\n    style: {\n      borderWidths: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    style: fullWidthStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 15\n    }\n  }, isPFP ? null : /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"u\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 21\n    }\n  }, isCET ? \"TERM\" : \"SEMESTER\")), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"u\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 19\n    }\n  }, moduleCodeTitle)), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"u\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 19\n    }\n  }, moduleTitle)), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"u\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 19\n    }\n  }, isCET ? isBefore2024 ? \"\" : \"CREDITS\" : is2010 ? \"CREDITS\" : isPFP ? \"\" : \"MODULAR CREDITS\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"u\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 19\n    }\n  }, \"GRADE\"))), renderedSemesters)))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 7\n    }\n  }));\n};\nexport const renderTranscript = document => {\n  // Group all modules by courses\n  const transcript = get(document, \"transcript\"); // const groupedCourses = groupBy(transcript, \"semester\");\n\n  const renderedCourses = renderCourse(document, transcript);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 10\n    }\n  }, renderedCourses);\n}; // display GPA for PET and DPLUS\n\nexport const renderPETGPA = GPA => /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 613,\n    columnNumber: 3\n  }\n}, \"Grade Point Average (GPA): \", GPA.toFixed(2), \" /4.00\", /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 615,\n    columnNumber: 5\n  }\n}));\nexport const renderGPA = document => {\n  const GPA = get(document, \"cumulativeScore\", undefined);\n  const WithMerit = get(document, \"additionalData.merit\");\n  const WithMeritTag = WithMerit === \"Y\" ? \"with Merit\" : \"\";\n  const strTemplate = get(document, \"$template.name\");\n  const isCET = strTemplate.substr(8, 6) === \"P_MAIN\" || \"P_NMAI\" ? 0 : 1;\n  const isNOTDPLUS = strTemplate.substr(8, 4) === \"C_DP\" ? 0 : 1;\n  const isNOTDCN = strTemplate.substr(8, 4) === \"C_DC\" ? 0 : 1;\n  const isPFP = strTemplate.substr(8, 5) === \"P_PFP\" ? 1 : 0;\n  const isMinCert = strTemplate.substr(8, 7) === \"P_MINOR\" ? 1 : 0;\n  const isPETMinor = strTemplate.substr(8, 7) === \"P_NMAIN\" ? 1 : 0;\n  const minorTitle = isMinCert ? document.name + \" in the \" : \"\";\n  const withMinorText = isPETMinor ? \" with \" + document.name : \"\"; // const AwardText = isPFP ? \"Completed the Polytechnic Foundation Programme for <br />\" + document.name : \"Awarded the \" + formatBold(document.name) + formatBold(WithMeritTag);\n  // return GPA ? (\n  // PFP - do not render the GPA if it is PFP\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 7\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    style: boxStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 7\n    }\n  }, isNOTDPLUS && isCET && isNOTDCN ? null : isMinCert ? null : isPFP ? null : renderPETGPA(GPA), isPFP ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"left\",\n      display: \"inline-block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 11\n    }\n  }, \"Completed the Polytechnic Foundation Programme for \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 64\n    }\n  }), \" \", document.name) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 11\n    }\n  }, \"Awarded the \", formatBold(minorTitle), isMinCert || isPETMinor ? formatBold(document.description) : formatBold(document.name), \" \", formatBold(WithMeritTag), isPETMinor ? /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 27\n    }\n  }) : null, formatBold(withMinorText)), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 7\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 9\n    }\n  }), \"----------------------------------------------------\", \" \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 9\n    }\n  }, \"End of Transcript\"), \"----------------------------------------------------\", \" \"));\n};\nexport const renderSignature = document => {\n  const certSign = formatSignatoriesPosition(document.additionalData.transcriptSignatories[0].position);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row d-flex justify-content-center align-items-end\",\n    style: {\n      marginTop: \"8rem\",\n      marginBottom: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: fullWidthStyle,\n    src: document.additionalData.transcriptSignatories[0].signature,\n    alt: \"Signature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: signatureTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 11\n    }\n  }, certSign[0]), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: signatureTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 11\n    }\n  }, certSign.length > 0 ? certSign[1] : null), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 11\n    }\n  }), document.additionalData.transcriptId)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst Template = ({\n  document\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"container\",\n  style: {\n    fontSize: \"0.9rem\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 716,\n    columnNumber: 3\n  }\n}, renderHeader(document), renderTranscript(document), renderGPA(document), renderSignature(document), renderGradingSystem(document));\n\nTemplate.propTypes = {\n  document: PropTypes.object.isRequired\n};\nexport default Template;","map":{"version":3,"sources":["/Users/Shared/opencerts/UAT-opencerts-renderer/src/components/templates/RPTemplate/common/transcript.js"],"names":["PropTypes","get","groupBy","React","IMG_LOGO_RP_HORIZONTAL","IMG_LOGO_RP_HORIZONTAL24","formatDDMMMYYYY","formatBold","formatSignatoriesPosition","fullWidthStyle","width","height","fullTableWidthStyle","border","thWidth60Left","textAlign","signatureTextStyle","color","fontSize","titleTextStyle","fontWeight","boxStyle","borderColor","borderStyle","renderRemarksGradingSystem","is2020","isDisplayOldCETLegend","isBf2025","renderTableHeader","isPFP","textDecoration","paddingLeft","renderBlankLine","renderGradeList","listGrade","strList","map","obj","i","grade","score","desc","renderHeader","document","strTemplate","isCET","substr","isPET","isBefore2024","isBefore2025","isDisplayNewLogo","renderGradingSystem","sYear","isBefore2023","listGradeText1L","listGradeText1RP","listGradeText1R","listGradeText2LP","listGradeText2RP","listGradeText2LC","listGradeText2RC","listGradeText2LC23","listGradeText2RC23","listGradeTextPFPL","listGradeTextPFPR","padding","renderCourse","course","recipientName","recipientNric","recipientFin","recipientNricFin","studentId","admissionDate","graduationDate","is2010","isCETBefore2024","isMinCert","isPETMinor","courseText","moduleCodeTitle","moduleTitle","minorTitle","name","groupedSubjects","renderedSemesters","Object","keys","semester","s","toString","courseCode","courseCredit","padEnd","description","additionalData","borderWidths","renderTranscript","transcript","renderedCourses","renderPETGPA","GPA","toFixed","renderGPA","undefined","WithMerit","WithMeritTag","isNOTDPLUS","isNOTDCN","withMinorText","display","renderSignature","certSign","transcriptSignatories","position","marginTop","marginBottom","signature","length","transcriptId","Template","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport { get, groupBy } from \"lodash\";\nimport React from \"react\";\nimport { IMG_LOGO_RP_HORIZONTAL, IMG_LOGO_RP_HORIZONTAL24 } from \"./images\";\nimport {\n  formatDDMMMYYYY,\n  formatBold,\n  formatSignatoriesPosition\n} from \"./functions\";\n\nexport const fullWidthStyle = {\n  width: \"100%\",\n  height: \"auto\"\n};\n\nexport const fullTableWidthStyle = {\n  width: \"100%\",\n  border: \"1px solid black\",\n  height: \"auto\"\n};\n\nexport const thWidth60Left = {\n  width: \"60%\",\n  textAlign: \"left\"\n};\n\nexport const signatureTextStyle = {\n  color: \"#050\",\n  fontSize: \"1.0rem\"\n};\n\nexport const titleTextStyle = {\n  fontSize: \"2.0rem\",\n  textAlign: \"center\",\n  fontWeight: \"bold\"\n};\n\nexport const boxStyle = {\n  border: 2,\n  borderColor: \"#AAA\",\n  borderStyle: \"solid\",\n  textAlign: \"center\"\n};\n\n// additional remarks for PET only\n// 2025 added changes for second line.\nexport const renderRemarksGradingSystem = (\n  is2020,\n  isDisplayOldCETLegend,\n  isBf2025\n) => (\n  <span>\n    <br />\n    {isDisplayOldCETLegend\n      ? null\n      : isBf2025\n      ? \"Incomplete Grade is implemented from Academic Year 2012 Semester 2 onwards.\\n\"\n      : \"Incomplete Grade is implemented for full-time diplomas from Academic Year 2012 Semester 2 onwards.\\n\"}\n    {!isDisplayOldCETLegend && <br />}\n    {isDisplayOldCETLegend\n      ? \"Non-Graded Pass Grade is implemented from March 2022 onwards.\"\n      : \"Non-Graded Pass Grade is implemented from Academic Year 2020 onwards.\"}\n    <br />\n    {isDisplayOldCETLegend\n      ? null\n      : \"A module for which grade point or modular credit is not accorded will not be considered in the computation of the cGPA.\\n\"}\n  </span>\n);\n\nexport const renderTableHeader = isPFP => (\n  <tr>\n    <th\n      style={{\n        width: \"25%\",\n        textDecoration: \"underline\",\n        paddingLeft: \"10px\"\n      }}\n    >\n      Grade\n    </th>\n    {isPFP ? (\n      <th style={{ width: \"25%\", textDecoration: \"underline\" }}></th>\n    ) : (\n      <th style={{ width: \"25%\", textDecoration: \"underline\" }}>Point</th>\n    )}\n    <th style={{ width: \"50%\", textDecoration: \"underline\" }}>Description</th>\n  </tr>\n);\n\nexport const renderBlankLine = () => (\n  <tr>\n    <td style={{ paddingLeft: \"10px\" }}>\n      &nbsp;\n      <br />\n    </td>\n    <td>&nbsp;</td>\n    <td>&nbsp;</td>\n  </tr>\n);\n\nexport const renderGradeList = listGrade => {\n  const strList = listGrade.map((obj, i) => (\n    <tr key={i}>\n      <td style={{ paddingLeft: \"10px\" }}>{obj.grade}</td>\n      <td>{obj.score}</td>\n      <td>{obj.desc}</td>\n    </tr>\n  ));\n  return strList;\n};\nexport const renderHeader = document => {\n  const strTemplate = get(document, \"$template.name\");\n  // check it is PET template  - position 16 for scheme 1.4, position 9 for scheme 2.0\n  //const isCET = strTemplate.substr(8, 6) === \"P_MAIN\" ? 0 : 1;\n  const isCET = strTemplate.substr(8, 2) === \"C_\" ? 1 : 0;\n  const isPET = !isCET;\n  //const isPFP = strTemplate.substr(8, 5) === \"P_PFP\" ? 1 : 0;\n  /* const isBefore2023 =\n    strTemplate.substr(3, 4) === \"2020\" ||\n    strTemplate.substr(3, 4) === \"2021\" ||\n    strTemplate.substr(3, 4) === \"2022\"\n      ? 1\n      : 0;\n    */\n\n  const isBefore2024 =\n    strTemplate.substr(3, 4) === \"2006\" ||\n    strTemplate.substr(3, 4) === \"2010\" ||\n    strTemplate.substr(3, 4) === \"2020\" ||\n    strTemplate.substr(3, 4) === \"2021\" ||\n    strTemplate.substr(3, 4) === \"2022\" ||\n    strTemplate.substr(3, 4) === \"2023\"\n      ? 1\n      : 0;\n  const isBefore2025 =\n    isBefore2024 || strTemplate.substr(3, 4) === \"2024\" ? 1 : 0;\n  const isDisplayNewLogo =\n    (isCET && isBefore2024) || (isPET && isBefore2025) ? 0 : 1;\n  return (\n    <div className=\"row\">\n      <div className=\"col-4\">\n        <img\n          style={fullWidthStyle}\n          src={\n            isDisplayNewLogo ? IMG_LOGO_RP_HORIZONTAL24 : IMG_LOGO_RP_HORIZONTAL\n          }\n          alt=\"RP Logo\"\n        />\n      </div>\n      <div className=\"col\" />\n      <div className=\"col-7\">\n        <div style={titleTextStyle}>TRANSCRIPT OF ACADEMIC RECORD</div>\n      </div>\n    </div>\n  );\n};\n\nexport const renderGradingSystem = document => {\n  // get the template name\n  const strTemplate = get(document, \"$template.name\");\n  // check it is PET template  - position 16 for scheme 1.4, position 9 for scheme 2.0\n  //const isCET = strTemplate.substr(8, 6) === \"P_MAIN\" ? 0 : 1;\n  const isCET = strTemplate.substr(8, 2) === \"C_\" ? 1 : 0;\n  const isPFP = strTemplate.substr(8, 5) === \"P_PFP\" ? 1 : 0;\n  // RP_ 2022_P_ PFP\n  // 0 12 3456789 01234\n\n  // check whether it is DPLUS template\n  // const isNOTDPLUS = strTemplate.substr(8, 4) === \"C_DP\" ? 0 : 1;\n  // RP_2020_P_MAIN\n  // const is2020 = strTemplate.substr(3, 4) === \"2020\" ? 1 : 0;\n\n  //const is2021or22 =strTemplate.substr(3, 4) === \"2021\" || strTemplate.substr(3, 4) === \"2022\" ? 1 : 0;\n  const sYear = strTemplate.substr(3, 4);\n  const isBefore2023 =\n    sYear === \"2020\" || sYear === \"2021\" || sYear === \"2022\" ? 1 : 0;\n  const isBf2025 =\n    sYear === \"2010\" ||\n    sYear === \"2020\" ||\n    sYear === \"2021\" ||\n    sYear === \"2022\" ||\n    sYear === \"2023\" ||\n    sYear === \"2024\"\n      ? true\n      : false; //check year\n  const isDisplayOldCETLegend = isCET && isBefore2023 ? 1 : 0;\n\n  const listGradeText1L = [\n    { grade: \"A\", score: \"4.0\", desc: \"Excellent\" },\n    { grade: \"B+\", score: \"3.5\", desc: \"Very Good\" },\n    { grade: \"B\", score: \"3.0\", desc: \"Good\" },\n    { grade: \"C+\", score: \"2.5\", desc: \"Satisfactory\" },\n    { grade: \"C\", score: \"2.0\", desc: \"Acceptable\" },\n    { grade: \"D+\", score: \"1.5\", desc: \"Conditional Pass\" },\n    { grade: \"D\", score: \"1.0\", desc: \"Conditional Pass\" }\n  ];\n  const listGradeText1RP = [\n    { grade: \"P\", score: \"2.0\", desc: \"Pass\" },\n    { grade: \"E\", score: \"0.5\", desc: \"Fail\" },\n    { grade: \"F\", score: \"0.0\", desc: \"Fail\" },\n    { grade: \"N\", score: \"-\", desc: \"Null(Defaulted)\" },\n    { grade: \"Pass*\", score: \"-\", desc: \"Pass with Commendation\" },\n    { grade: \"Pass\", score: \"-\", desc: \"Pass\" },\n    { grade: \"Fail\", score: \"-\", desc: \"Fail\" }\n  ];\n  const listGradeText1R = [\n    { grade: \"P\", score: \"2.0\", desc: \"Pass\" },\n    { grade: \"E\", score: \"0.5\", desc: \"Fail\" },\n    { grade: \"F\", score: \"0.0\", desc: \"Fail\" },\n    { grade: \"N\", score: \"-\", desc: \"Null(Defaulted)\" },\n    { grade: \"Pass*\", score: \"-\", desc: \"Pass with Commendation\" },\n    { grade: \"Pass\", score: \"-\", desc: \"Pass\" },\n    { grade: \"Fail\", score: \"-\", desc: \"Fail\" }\n  ];\n\n  const listGradeText2LP = [\n    { grade: \"DIST\", score: \"4.0\", desc: \"Distinction^\" },\n    { grade: \"A\", score: \"4.0\", desc: \"Excellent\" },\n    { grade: \"B+\", score: \"3.5\", desc: \"Very Good\" },\n    { grade: \"B\", score: \"3.0\", desc: \"Very Good\" },\n    { grade: \"C+\", score: \"2.5\", desc: \"Good\" },\n    { grade: \"C\", score: \"2.0\", desc: \"Good\" },\n    { grade: \"D+\", score: \"1.5\", desc: \"Pass\" },\n    { grade: \"D\", score: \"1.0\", desc: \"Pass\" }\n  ];\n\n  const listGradeText2RP = [\n    { grade: \"NGP\", score: \"1.0\", desc: \"Non-Graded Pass\" },\n    { grade: \"F\", score: \"0.0\", desc: \"Fail\" },\n    { grade: \"Pass*\", score: \"-\", desc: \"Pass with Commendation\" },\n    { grade: \"Pass\", score: \"-\", desc: \"Pass\" },\n    { grade: \"Fail\", score: \"-\", desc: \"Fail\" },\n    { grade: \"Exempted\", score: \"-\", desc: \"Exempted from taking the module\" },\n    { grade: \"Incomplete\", score: \"-\", desc: \"Incomplete\" }\n  ];\n  const listGradeText2LC = [\n    { grade: \"DIST\", score: \"4.0\", desc: \"Distinction^\" },\n    { grade: \"A\", score: \"4.0\", desc: \"Excellent\" },\n    { grade: \"B+\", score: \"3.5\", desc: \"Very Good\" },\n    { grade: \"B\", score: \"3.0\", desc: \"Very Good\" },\n    { grade: \"C+\", score: \"2.5\", desc: \"Good\" },\n    { grade: \"C\", score: \"2.0\", desc: \"Good\" },\n    { grade: \"D+\", score: \"1.5\", desc: \"Pass\" }\n  ];\n  const listGradeText2RC = [\n    { grade: \"D\", score: \"1.0\", desc: \"Pass\" },\n    { grade: \"NGP\", score: \"1.0\", desc: \"Non-Graded Pass\" },\n    { grade: \"F\", score: \"0.0\", desc: \"Fail\" },\n    { grade: \"Pass*\", score: \"-\", desc: \"Pass with Commendation\" },\n    { grade: \"Pass\", score: \"-\", desc: \"Pass\" },\n    { grade: \"Fail\", score: \"-\", desc: \"Fail\" },\n    { grade: \"Exempted\", score: \"-\", desc: \"Exempted from taking the module\" }\n  ];\n  const listGradeText2LC23 = [\n    { grade: \"DIST\", score: \"4.0\", desc: \"Distinction^\" },\n    { grade: \"A\", score: \"4.0\", desc: \"Excellent\" },\n    { grade: \"B+\", score: \"3.5\", desc: \"Very Good\" },\n    { grade: \"B\", score: \"3.0\", desc: \"Very Good\" },\n    { grade: \"C+\", score: \"2.5\", desc: \"Good\" },\n    { grade: \"C\", score: \"2.0\", desc: \"Good\" },\n    { grade: \"D+\", score: \"1.5\", desc: \"Pass\" },\n    { grade: \"D\", score: \"1.0\", desc: \"Pass\" }\n  ];\n  const listGradeText2RC23 = [\n    { grade: \"NGP\", score: \"1.0\", desc: \"Non-Graded Pass\" },\n    { grade: \"F\", score: \"0.0\", desc: \"Fail\" },\n    { grade: \"Pass*\", score: \"-\", desc: \"Pass with Commendation\" },\n    { grade: \"Pass\", score: \"-\", desc: \"Pass\" },\n    { grade: \"Fail\", score: \"-\", desc: \"Fail\" },\n    {\n      grade: \"Exempted/EX\",\n      score: \"-\",\n      desc: \"Exempted from taking the module\"\n    },\n    { grade: \"Incomplete\", score: \"-\", desc: \"Incomplete\" },\n    { grade: \"TRF()\", score: \"-\", desc: \"Credit transfer\" }\n  ];\n  const listGradeTextPFPL = [\n    { grade: \"DIST\", score: \"\", desc: \"Distinction\" },\n    { grade: \"A\", score: \"\", desc: \"Excellent\" },\n    { grade: \"B+\", score: \"\", desc: \"Very Good\" },\n    { grade: \"B\", score: \"\", desc: \"Very Good\" },\n    { grade: \"C+\", score: \"\", desc: \"Good\" }\n  ];\n\n  const listGradeTextPFPR = [\n    { grade: \"C\", score: \"\", desc: \"Good\" },\n    { grade: \"D+\", score: \"\", desc: \"Pass\" },\n    { grade: \"D\", score: \"\", desc: \"Pass\" },\n    { grade: \"P\", score: \"\", desc: \"Pass\" },\n    { grade: \"F\", score: \"\", desc: \"Fail\" }\n  ];\n\n  /*\n  const listGradeTextO2R = [\n    { grade: \"F\", score: \"0.0\", desc: \"Fail\" },\n    { grade: \"Pass*\", score: \"-\", desc: \"Pass with Commendation\" },\n    { grade: \"Pass\", score: \"-\", desc: \"Pass\" },\n    { grade: \"Fail\", score: \"-\", desc: \"Fail\" },\n    { grade: \"Exempted\", score: \"-\", desc: \"Exempted from taking the module\" }\n  ];\n*/\n  // if PET or DPLUS, display grading system otherwise do not display\n  return (\n    <div className=\"row\">\n      <div className=\"col-12\" />\n      <div className=\"col-12\" style={{ fontSize: \"0.9rem\" }}>\n        <p style={{ fontWeight: \"bold\" }}>\n          <br />\n          {isPFP > 0 ? \"Grading System\" : \"Academic Year 2003 to 2010\"}\n        </p>\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <table style={fullTableWidthStyle}>\n              <tbody>\n                {renderTableHeader(isPFP)}\n                {isPFP\n                  ? renderGradeList(listGradeTextPFPL)\n                  : renderGradeList(listGradeText1L)}\n              </tbody>\n            </table>\n          </div>\n          <div className=\"col-6\">\n            <table style={fullTableWidthStyle}>\n              <tbody>\n                {renderTableHeader(isPFP)}\n                {isPFP\n                  ? renderGradeList(listGradeTextPFPR)\n                  : isCET\n                  ? renderGradeList(listGradeText1R)\n                  : renderGradeList(listGradeText1RP)}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        {isPFP ? null : (\n          <p style={{ fontWeight: \"bold\" }}>\n            <br />\n            Academic Year 2011 onwards\n          </p>\n        )}\n        {isPFP ? null : (\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <table style={fullTableWidthStyle}>\n                <tbody>\n                  {renderTableHeader(isPFP)}\n                  {isCET\n                    ? isBefore2023\n                      ? renderGradeList(listGradeText2LC)\n                      : renderGradeList(listGradeText2LC23)\n                    : renderGradeList(listGradeText2LP)}\n                </tbody>\n              </table>\n            </div>\n            <div className=\"col-6\">\n              <table style={fullTableWidthStyle}>\n                <tbody>\n                  {renderTableHeader(isPFP)}\n                  {isPFP\n                    ? null\n                    : isCET\n                    ? isBefore2023\n                      ? renderGradeList(listGradeText2RC)\n                      : renderGradeList(listGradeText2RC23)\n                    : isBf2025\n                    ? renderGradeList(listGradeText2RP)\n                    : renderGradeList(listGradeText2RC23)}\n                  {isBefore2023 > 3 && (\n                    <tr>\n                      <td style={{ paddingLeft: \"10px\" }}>\n                        {isCET ? \" \" : \"Incomplete\"} &nbsp;\n                      </td>\n                      <td>{isCET ? null : \"-\"}</td>\n                      <td>{isCET ? null : \"Incomplete\"}</td>\n                    </tr>\n                  )}\n                  {isBefore2023 > 3 && (\n                    <tr>\n                      <td style={{ paddingLeft: \"10px\" }}>\n                        {isCET ? \" \" : \"NGP\"} &nbsp;\n                      </td>\n                      <td>{isCET ? null : \"1.0\"}</td>\n                      <td>{isCET ? null : \"Non-Graded Pass\"}</td>\n                    </tr>\n                  )}\n                  {isCET ? null : isBf2025 ? renderBlankLine() : null}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )}\n        {isPFP ? null : (\n          <p>\n            ^Distinction is awarded from Academic Year 2012 onwards.\n            {renderRemarksGradingSystem(isCET, isDisplayOldCETLegend, isBf2025)}\n          </p>\n        )}\n        {isPFP ? null : (\n          <div\n            className=\"row\"\n            style={{ padding: \"5px 5px 5px 5px\", border: \"1px solid black\" }}\n          >\n            <p>\n              <span style={{ fontWeight: \"bold\" }}>\n                {\" \"}\n                Advanced Placement Credits{\" \"}\n              </span>{\" \"}\n              <br />\n              Advanced Placement Credits are granted by Republic Polytechnic for\n              modules taken and awarded a passed grade prior to admission to the\n              Polytechnic. In this regard, Republic Polytechnic recognises these\n              modules that are completed either at another educational\n              institution or based on performance placement tests set by the\n              Polytechnic.\n            </p>\n          </div>\n        )}\n        {isPFP ? null : (\n          <p style={{ fontWeight: \"bold\" }}>\n            <br />\n            The medium of instruction used in this Polytechnic is English.\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport const renderCourse = (document, course) => {\n  // Get student info and course description\n  const recipientName = get(document, \"recipient.name\");\n  const recipientNric = get(document, \"recipient.nric\");\n  const recipientFin = get(document, \"recipient.fin\");\n  const recipientNricFin = !recipientNric ? recipientFin : recipientNric;\n  const studentId = get(document, \"recipient.studentId\");\n  const admissionDate = get(document, \"admissionDate\");\n  const graduationDate = get(document, \"graduationDate\");\n  const strTemplate = get(document, \"$template.name\");\n  //const isCET = strTemplate.substr(8, 2) === \"P_\" ? 0 : 1;\n  const isCET = strTemplate.substr(8, 2) === \"C_\" ? 1 : 0;\n  //const isPET = strTemplate.substr(8, 6) === \"P_MAIN\" ? 1 : 0;\n  const isPFP = strTemplate.substr(8, 5) === \"P_PFP\" ? 1 : 0;\n  const is2010 = strTemplate === \"RP_2010_P_MAIN\" ? 1 : 0;\n  const isBefore2024 =\n    strTemplate.substr(3, 4) === \"2021\" ||\n    strTemplate.substr(3, 4) === \"2022\" ||\n    strTemplate.substr(3, 4) === \"2023\"\n      ? 1\n      : 0;\n  const isCETBefore2024 = isCET && isBefore2024 ? 1 : 0;\n  const isMinCert = strTemplate.substr(8, 7) === \"P_MINOR\" ? 1 : 0;\n  const isPETMinor = strTemplate.substr(8, 7) === \"P_NMAIN\" ? 1 : 0;\n  const courseText = isPFP ? \"Polytechnic Foundation Programme for \" : null;\n  const moduleCodeTitle = isPFP ? \"MODULE CODE\" : \"MODULE\";\n  const moduleTitle = isPFP ? \"MODULE NAME\" : \"\";\n  const minorTitle = isMinCert ? document.name + \" in the \" : \"\";\n  // Group all modules by semesters\n  const groupedSubjects = groupBy(course, \"semester\");\n\n  const renderedSemesters = Object.keys(groupedSubjects).map(semester =>\n    groupedSubjects[semester].map((s, i) => (\n      <tr key={i}>\n        {isPFP ? null : (\n          <td style={{ textAlign: \"left\" }}>\n            {i || s.semester === \"-\" ? null : formatBold(s.semester.toString())}\n          </td>\n        )}\n        <td style={{ textAlign: \"left\" }}>\n          {s.courseCode !== \"ZZZ\" ? s.courseCode : \"\"}\n        </td>\n        <td style={{ textAlign: \"left\" }}>\n          {s.courseCode !== \"ZZZ\" || s.semester === \"-\"\n            ? s.name\n            : formatBold(s.name)}\n        </td>\n        <td>\n          {isPFP ||\n          isCETBefore2024 ||\n          s.courseCredit === 0 ||\n          s.courseCredit === \"0\"\n            ? \"\"\n            : s.courseCredit}\n        </td>\n        <td>{s.courseCode !== \"ZZZ\" ? s.grade.padEnd(2, \" \") : \"\"}&nbsp;</td>\n      </tr>\n    ))\n  );\n\n  return (\n    <div>\n      <br />\n\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"row\">\n            <div className=\"col-2\">Name</div>\n            <div className=\"col-10\">\n              :&nbsp;&nbsp;\n              {recipientName}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-2\">Course</div>\n            <div className=\"col-10\">\n              :&nbsp;&nbsp;\n              {courseText}\n              {isMinCert ? minorTitle : \"\"}\n              {isMinCert || isPETMinor ? document.description : document.name}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-2\">NRIC/FIN</div>\n            <div className=\"col-4\">\n              :&nbsp;&nbsp;\n              {recipientNricFin}\n            </div>\n            <div\n              className=\"col-4 justify-content-right\"\n              style={{ textAlign: \"right\" }}\n            >\n              {isMinCert ? \"\" : \"Date of Admission:\"}\n            </div>\n            <div\n              className=\"col-2 justify-content-right\"\n              style={{ textAlign: \"right\" }}\n            >\n              {isMinCert ? \"\" : formatDDMMMYYYY(admissionDate)}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-2\">Student ID</div>\n            <div className=\"col-4\">\n              :&nbsp;&nbsp;\n              {studentId || document.additionalData.studentId}\n            </div>\n            <div\n              className=\"col-4 justify-content-right\"\n              style={{ textAlign: \"right\" }}\n            >\n              Date of{\" \"}\n              {isMinCert\n                ? \"Endorsement\"\n                : is2010\n                ? \"Graduation\"\n                : \"Endorsement\"}\n              :\n            </div>\n            <div\n              className=\"col-2 justify-content-right\"\n              style={{ textAlign: \"right\" }}\n            >\n              {formatDDMMMYYYY(graduationDate)}\n            </div>\n          </div>\n        </div>\n      </div>\n      <hr style={{ borderWidths: \"2rem\" }} />\n      <div className=\"row\">\n        <div className=\"col text-center\">\n          <table style={fullWidthStyle}>\n            <tbody>\n              <tr>\n                {isPFP ? null : (\n                  <th style={{ textAlign: \"left\" }}>\n                    <u>{isCET ? \"TERM\" : \"SEMESTER\"}</u>\n                  </th>\n                )}\n                <th style={{ textAlign: \"left\" }}>\n                  <u>{moduleCodeTitle}</u>\n                </th>\n                <th style={{ textAlign: \"left\" }}>\n                  <u>{moduleTitle}</u>\n                </th>\n                <th>\n                  <u>\n                    {isCET\n                      ? isBefore2024\n                        ? \"\"\n                        : \"CREDITS\"\n                      : is2010\n                      ? \"CREDITS\"\n                      : isPFP\n                      ? \"\"\n                      : \"MODULAR CREDITS\"}\n                  </u>\n                </th>\n                <th>\n                  <u>GRADE</u>\n                </th>\n              </tr>\n              {renderedSemesters}\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <br />\n    </div>\n  );\n};\n\nexport const renderTranscript = document => {\n  // Group all modules by courses\n  const transcript = get(document, \"transcript\");\n  // const groupedCourses = groupBy(transcript, \"semester\");\n  const renderedCourses = renderCourse(document, transcript);\n\n  return <div>{renderedCourses}</div>;\n};\n\n// display GPA for PET and DPLUS\nexport const renderPETGPA = GPA => (\n  <span>\n    Grade Point Average (GPA): {GPA.toFixed(2)} /4.00\n    <br />\n  </span>\n);\n\nexport const renderGPA = document => {\n  const GPA = get(document, \"cumulativeScore\", undefined);\n  const WithMerit = get(document, \"additionalData.merit\");\n  const WithMeritTag = WithMerit === \"Y\" ? \"with Merit\" : \"\";\n  const strTemplate = get(document, \"$template.name\");\n  const isCET = strTemplate.substr(8, 6) === \"P_MAIN\" || \"P_NMAI\" ? 0 : 1;\n  const isNOTDPLUS = strTemplate.substr(8, 4) === \"C_DP\" ? 0 : 1;\n  const isNOTDCN = strTemplate.substr(8, 4) === \"C_DC\" ? 0 : 1;\n  const isPFP = strTemplate.substr(8, 5) === \"P_PFP\" ? 1 : 0;\n  const isMinCert = strTemplate.substr(8, 7) === \"P_MINOR\" ? 1 : 0;\n  const isPETMinor = strTemplate.substr(8, 7) === \"P_NMAIN\" ? 1 : 0;\n  const minorTitle = isMinCert ? document.name + \" in the \" : \"\";\n  const withMinorText = isPETMinor ? \" with \" + document.name : \"\";\n  // const AwardText = isPFP ? \"Completed the Polytechnic Foundation Programme for <br />\" + document.name : \"Awarded the \" + formatBold(document.name) + formatBold(WithMeritTag);\n  // return GPA ? (\n\n  // PFP - do not render the GPA if it is PFP\n  return (\n    <div className=\"row\">\n      <div className=\"col-3\"> </div>\n      <div className=\"col-6\" style={boxStyle}>\n        {isNOTDPLUS && isCET && isNOTDCN\n          ? null\n          : isMinCert\n          ? null\n          : isPFP\n          ? null\n          : renderPETGPA(GPA)}\n        {isPFP ? (\n          <div style={{ textAlign: \"left\", display: \"inline-block\" }}>\n            Completed the Polytechnic Foundation Programme for <br />{\" \"}\n            {document.name}\n          </div>\n        ) : (\n          <span>\n            Awarded the {formatBold(minorTitle)}\n            {isMinCert || isPETMinor\n              ? formatBold(document.description)\n              : formatBold(document.name)}{\" \"}\n            {formatBold(WithMeritTag)}\n            {isPETMinor ? <br /> : null}\n            {formatBold(withMinorText)}\n          </span>\n        )}\n        <br />\n      </div>\n      <div className=\"col-3\"> </div>\n\n      <div className=\"col-12 text-center\">\n        <br />\n        ----------------------------------------------------{\" \"}\n        <strong>End of Transcript</strong>\n        ----------------------------------------------------{\" \"}\n      </div>\n    </div>\n  );\n};\n\nexport const renderSignature = document => {\n  const certSign = formatSignatoriesPosition(\n    document.additionalData.transcriptSignatories[0].position\n  );\n  return (\n    <div\n      className=\"row d-flex justify-content-center align-items-end\"\n      style={{ marginTop: \"8rem\", marginBottom: \"2rem\" }}\n    >\n      <div className=\"col-6\" />\n\n      <div className=\"col-4\">\n        <div className=\"px-4\">\n          <img\n            style={fullWidthStyle}\n            src={document.additionalData.transcriptSignatories[0].signature}\n            alt=\"Signature\"\n          />\n          <hr />\n        </div>\n        <div className=\"text-center\">\n          <span style={signatureTextStyle}>{certSign[0]}</span>\n          <br />\n          <span style={signatureTextStyle}>\n            {certSign.length > 0 ? certSign[1] : null}\n          </span>\n          <br />\n          <br />\n          <br />\n          {document.additionalData.transcriptId}\n        </div>\n      </div>\n\n      <div className=\"col-2\" />\n    </div>\n  );\n};\n\nconst Template = ({ document }) => (\n  <div className=\"container\" style={{ fontSize: \"0.9rem\" }}>\n    {renderHeader(document)}\n    {renderTranscript(document)}\n    {renderGPA(document)}\n    {renderSignature(document)}\n    {renderGradingSystem(document)}\n  </div>\n);\n\nTemplate.propTypes = {\n  document: PropTypes.object.isRequired\n};\nexport default Template;\n"]},"metadata":{},"sourceType":"module"}