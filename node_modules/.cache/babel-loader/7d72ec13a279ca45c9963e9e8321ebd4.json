{"ast":null,"code":"var _jsxFileName = \"/Users/Shared/opencerts/UAT-opencerts-renderer/src/components/templates/default/NestedComponent/NestedComponent.js\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { borders, background } from \"./NestedComponent.module.scss\";\nexport const KeyValueComponent = ({\n  label,\n  value\n}) => {\n  const [show, setShow] = useState(true);\n\n  const toggleShow = () => setShow(!show);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: label,\n    className: borders,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `p-4 ${background}`,\n    onClick: toggleShow,\n    \"data-component-id\": \"toggle-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, label), /*#__PURE__*/React.createElement(\"div\", {\n    className: `p-4 text-truncate ${show ? \"\" : \"d-none\"}`,\n    \"data-component-id\": \"displayed-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, NestedComponent({\n    children: value\n  })));\n};\n\nconst NestedComponent = ({\n  children\n}) => {\n  if (typeof children !== \"object\") {\n    return children.toString();\n  } else {\n    const grandchildren = Object.keys(children).map(key => KeyValueComponent({\n      label: key,\n      value: children[key]\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: borders,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 12\n      }\n    }, grandchildren);\n  }\n};\n\nexport default NestedComponent;\nNestedComponent.propTypes = {\n  children: PropTypes.any\n};\nKeyValueComponent.propTypes = {\n  label: PropTypes.string,\n  value: PropTypes.any\n};","map":{"version":3,"sources":["/Users/Shared/opencerts/UAT-opencerts-renderer/src/components/templates/default/NestedComponent/NestedComponent.js"],"names":["React","useState","PropTypes","borders","background","KeyValueComponent","label","value","show","setShow","toggleShow","NestedComponent","children","toString","grandchildren","Object","keys","map","key","propTypes","any","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,+BAApC;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAsB;AACrD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;;AACA,QAAMS,UAAU,GAAG,MAAMD,OAAO,CAAC,CAACD,IAAF,CAAhC;;AACA,sBACE;AAAK,IAAA,GAAG,EAAEF,KAAV;AAAiB,IAAA,SAAS,EAAEH,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAG,OAAMC,UAAW,EAD/B;AAEE,IAAA,OAAO,EAAEM,UAFX;AAGE,yBAAkB,gBAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGJ,KALH,CADF,eAQE;AACE,IAAA,SAAS,EAAG,qBAAoBE,IAAI,GAAG,EAAH,GAAQ,QAAS,EADvD;AAEE,yBAAkB,iBAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGG,eAAe,CAAC;AAAEC,IAAAA,QAAQ,EAAEL;AAAZ,GAAD,CAJlB,CARF,CADF;AAiBD,CApBM;;AAsBP,MAAMI,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACxC,MAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAChC,WAAOA,QAAQ,CAACC,QAAT,EAAP;AACD,GAFD,MAEO;AACL,UAAMC,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYJ,QAAZ,EAAsBK,GAAtB,CAA0BC,GAAG,IACjDb,iBAAiB,CAAC;AAAEC,MAAAA,KAAK,EAAEY,GAAT;AAAcX,MAAAA,KAAK,EAAEK,QAAQ,CAACM,GAAD;AAA7B,KAAD,CADG,CAAtB;AAGA,wBAAO;AAAK,MAAA,SAAS,EAAEf,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BW,aAA1B,CAAP;AACD;AACF,CATD;;AAWA,eAAeH,eAAf;AAEAA,eAAe,CAACQ,SAAhB,GAA4B;AAC1BP,EAAAA,QAAQ,EAAEV,SAAS,CAACkB;AADM,CAA5B;AAIAf,iBAAiB,CAACc,SAAlB,GAA8B;AAC5Bb,EAAAA,KAAK,EAAEJ,SAAS,CAACmB,MADW;AAE5Bd,EAAAA,KAAK,EAAEL,SAAS,CAACkB;AAFW,CAA9B","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { borders, background } from \"./NestedComponent.module.scss\";\n\nexport const KeyValueComponent = ({ label, value }) => {\n  const [show, setShow] = useState(true);\n  const toggleShow = () => setShow(!show);\n  return (\n    <div key={label} className={borders}>\n      <div\n        className={`p-4 ${background}`}\n        onClick={toggleShow}\n        data-component-id=\"toggle-display\"\n      >\n        {label}\n      </div>\n      <div\n        className={`p-4 text-truncate ${show ? \"\" : \"d-none\"}`}\n        data-component-id=\"displayed-value\"\n      >\n        {NestedComponent({ children: value })}\n      </div>\n    </div>\n  );\n};\n\nconst NestedComponent = ({ children }) => {\n  if (typeof children !== \"object\") {\n    return children.toString();\n  } else {\n    const grandchildren = Object.keys(children).map(key =>\n      KeyValueComponent({ label: key, value: children[key] })\n    );\n    return <div className={borders}>{grandchildren}</div>;\n  }\n};\n\nexport default NestedComponent;\n\nNestedComponent.propTypes = {\n  children: PropTypes.any\n};\n\nKeyValueComponent.propTypes = {\n  label: PropTypes.string,\n  value: PropTypes.any\n};\n"]},"metadata":{},"sourceType":"module"}