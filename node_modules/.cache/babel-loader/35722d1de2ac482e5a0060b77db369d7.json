{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/OpenCerts/opencerts-renderer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/OpenCerts/opencerts-renderer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _regeneratorRuntime = require(\"/OpenCerts/opencerts-renderer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(resolveRootMode),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(loadPrivatePartialConfig);\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loadPrivatePartialConfig;\nexports.loadPartialConfig = void 0;\n\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _gensync() {\n  var data = _interopRequireDefault(require(\"gensync\"));\n\n  _gensync = function _gensync() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _plugin = _interopRequireDefault(require(\"./plugin\"));\n\nvar _util = require(\"./util\");\n\nvar _item = require(\"./item\");\n\nvar _configChain = require(\"./config-chain\");\n\nvar _environment = require(\"./helpers/environment\");\n\nvar _options = require(\"./validation/options\");\n\nvar _files = require(\"./files\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction resolveRootMode(rootDir, rootMode) {\n  var upwardRootDir, _upwardRootDir;\n\n  return _regeneratorRuntime.wrap(function resolveRootMode$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.t0 = rootMode;\n          _context.next = _context.t0 === \"root\" ? 3 : _context.t0 === \"upward-optional\" ? 4 : _context.t0 === \"upward\" ? 7 : 12;\n          break;\n\n        case 3:\n          return _context.abrupt(\"return\", rootDir);\n\n        case 4:\n          return _context.delegateYield((0, _files.findConfigUpwards)(rootDir), \"t1\", 5);\n\n        case 5:\n          upwardRootDir = _context.t1;\n          return _context.abrupt(\"return\", upwardRootDir === null ? rootDir : upwardRootDir);\n\n        case 7:\n          return _context.delegateYield((0, _files.findConfigUpwards)(rootDir), \"t2\", 8);\n\n        case 8:\n          _upwardRootDir = _context.t2;\n\n          if (!(_upwardRootDir !== null)) {\n            _context.next = 11;\n            break;\n          }\n\n          return _context.abrupt(\"return\", _upwardRootDir);\n\n        case 11:\n          throw Object.assign(new Error(\"Babel was run with rootMode:\\\"upward\\\" but a root could not \" + \"be found when searching upward from \\\"\".concat(rootDir, \"\\\".\\n\") + \"One of the following config files must be in the directory tree: \" + \"\\\"\".concat(_files.ROOT_CONFIG_FILENAMES.join(\", \"), \"\\\".\")), {\n            code: \"BABEL_ROOT_NOT_FOUND\",\n            dirname: rootDir\n          });\n\n        case 12:\n          throw new Error(\"Assertion failure - unknown rootMode value.\");\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction loadPrivatePartialConfig(inputOpts) {\n  var args, _args$envName, envName, _args$cwd, cwd, _args$root, rootDir, _args$rootMode, rootMode, caller, absoluteCwd, absoluteRootDir, context, configChain, options;\n\n  return _regeneratorRuntime.wrap(function loadPrivatePartialConfig$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!(inputOpts != null && (typeof inputOpts !== \"object\" || Array.isArray(inputOpts)))) {\n            _context2.next = 2;\n            break;\n          }\n\n          throw new Error(\"Babel options must be an object, null, or undefined\");\n\n        case 2:\n          args = inputOpts ? (0, _options.validate)(\"arguments\", inputOpts) : {};\n          _args$envName = args.envName, envName = _args$envName === void 0 ? (0, _environment.getEnv)() : _args$envName, _args$cwd = args.cwd, cwd = _args$cwd === void 0 ? \".\" : _args$cwd, _args$root = args.root, rootDir = _args$root === void 0 ? \".\" : _args$root, _args$rootMode = args.rootMode, rootMode = _args$rootMode === void 0 ? \"root\" : _args$rootMode, caller = args.caller;\n          absoluteCwd = _path().default.resolve(cwd);\n          return _context2.delegateYield(resolveRootMode(_path().default.resolve(absoluteCwd, rootDir), rootMode), \"t0\", 6);\n\n        case 6:\n          absoluteRootDir = _context2.t0;\n          context = {\n            filename: typeof args.filename === \"string\" ? _path().default.resolve(cwd, args.filename) : undefined,\n            cwd: absoluteCwd,\n            root: absoluteRootDir,\n            envName: envName,\n            caller: caller\n          };\n          return _context2.delegateYield((0, _configChain.buildRootChain)(args, context), \"t1\", 9);\n\n        case 9:\n          configChain = _context2.t1;\n\n          if (configChain) {\n            _context2.next = 12;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", null);\n\n        case 12:\n          options = {};\n          configChain.options.forEach(function (opts) {\n            (0, _util.mergeOptions)(options, opts);\n          });\n          options.babelrc = false;\n          options.configFile = false;\n          options.passPerPreset = false;\n          options.envName = context.envName;\n          options.cwd = context.cwd;\n          options.root = context.root;\n          options.filename = typeof context.filename === \"string\" ? context.filename : undefined;\n          options.plugins = configChain.plugins.map(function (descriptor) {\n            return (0, _item.createItemFromDescriptor)(descriptor);\n          });\n          options.presets = configChain.presets.map(function (descriptor) {\n            return (0, _item.createItemFromDescriptor)(descriptor);\n          });\n          return _context2.abrupt(\"return\", {\n            options: options,\n            context: context,\n            ignore: configChain.ignore,\n            babelrc: configChain.babelrc,\n            config: configChain.config\n          });\n\n        case 24:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nvar loadPartialConfig = (0, _gensync().default)( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(inputOpts) {\n  var result, options, babelrc, ignore, config;\n  return _regeneratorRuntime.wrap(function _callee$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.delegateYield(loadPrivatePartialConfig(inputOpts), \"t0\", 1);\n\n        case 1:\n          result = _context3.t0;\n\n          if (result) {\n            _context3.next = 4;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", null);\n\n        case 4:\n          options = result.options, babelrc = result.babelrc, ignore = result.ignore, config = result.config;\n          (options.plugins || []).forEach(function (item) {\n            if (item.value instanceof _plugin.default) {\n              throw new Error(\"Passing cached plugin instances is not supported in \" + \"babel.loadPartialConfig()\");\n            }\n          });\n          return _context3.abrupt(\"return\", new PartialConfig(options, babelrc ? babelrc.filepath : undefined, ignore ? ignore.filepath : undefined, config ? config.filepath : undefined));\n\n        case 7:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _callee);\n}));\nexports.loadPartialConfig = loadPartialConfig;\n\nvar PartialConfig = /*#__PURE__*/function () {\n  function PartialConfig(options, babelrc, ignore, config) {\n    _classCallCheck(this, PartialConfig);\n\n    this.options = options;\n    this.babelignore = ignore;\n    this.babelrc = babelrc;\n    this.config = config;\n    Object.freeze(this);\n  }\n\n  _createClass(PartialConfig, [{\n    key: \"hasFilesystemConfig\",\n    value: function hasFilesystemConfig() {\n      return this.babelrc !== undefined || this.config !== undefined;\n    }\n  }]);\n\n  return PartialConfig;\n}();\n\nObject.freeze(PartialConfig.prototype);","map":{"version":3,"sources":["/OpenCerts/opencerts-renderer/node_modules/@babel/core/lib/config/partial.js"],"names":["resolveRootMode","loadPrivatePartialConfig","Object","defineProperty","exports","value","default","loadPartialConfig","_path","data","_interopRequireDefault","require","_gensync","_plugin","_util","_item","_configChain","_environment","_options","_files","obj","__esModule","rootDir","rootMode","findConfigUpwards","upwardRootDir","assign","Error","ROOT_CONFIG_FILENAMES","join","code","dirname","inputOpts","Array","isArray","args","validate","envName","getEnv","cwd","root","caller","absoluteCwd","resolve","absoluteRootDir","context","filename","undefined","buildRootChain","configChain","options","forEach","opts","mergeOptions","babelrc","configFile","passPerPreset","plugins","map","descriptor","createItemFromDescriptor","presets","ignore","config","result","item","PartialConfig","filepath","babelignore","freeze","prototype"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loadPrivatePartialConfig;\nexports.loadPartialConfig = void 0;\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _gensync() {\n  const data = _interopRequireDefault(require(\"gensync\"));\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _plugin = _interopRequireDefault(require(\"./plugin\"));\n\nvar _util = require(\"./util\");\n\nvar _item = require(\"./item\");\n\nvar _configChain = require(\"./config-chain\");\n\nvar _environment = require(\"./helpers/environment\");\n\nvar _options = require(\"./validation/options\");\n\nvar _files = require(\"./files\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction* resolveRootMode(rootDir, rootMode) {\n  switch (rootMode) {\n    case \"root\":\n      return rootDir;\n\n    case \"upward-optional\":\n      {\n        const upwardRootDir = yield* (0, _files.findConfigUpwards)(rootDir);\n        return upwardRootDir === null ? rootDir : upwardRootDir;\n      }\n\n    case \"upward\":\n      {\n        const upwardRootDir = yield* (0, _files.findConfigUpwards)(rootDir);\n        if (upwardRootDir !== null) return upwardRootDir;\n        throw Object.assign(new Error(`Babel was run with rootMode:\"upward\" but a root could not ` + `be found when searching upward from \"${rootDir}\".\\n` + `One of the following config files must be in the directory tree: ` + `\"${_files.ROOT_CONFIG_FILENAMES.join(\", \")}\".`), {\n          code: \"BABEL_ROOT_NOT_FOUND\",\n          dirname: rootDir\n        });\n      }\n\n    default:\n      throw new Error(`Assertion failure - unknown rootMode value.`);\n  }\n}\n\nfunction* loadPrivatePartialConfig(inputOpts) {\n  if (inputOpts != null && (typeof inputOpts !== \"object\" || Array.isArray(inputOpts))) {\n    throw new Error(\"Babel options must be an object, null, or undefined\");\n  }\n\n  const args = inputOpts ? (0, _options.validate)(\"arguments\", inputOpts) : {};\n  const {\n    envName = (0, _environment.getEnv)(),\n    cwd = \".\",\n    root: rootDir = \".\",\n    rootMode = \"root\",\n    caller\n  } = args;\n\n  const absoluteCwd = _path().default.resolve(cwd);\n\n  const absoluteRootDir = yield* resolveRootMode(_path().default.resolve(absoluteCwd, rootDir), rootMode);\n  const context = {\n    filename: typeof args.filename === \"string\" ? _path().default.resolve(cwd, args.filename) : undefined,\n    cwd: absoluteCwd,\n    root: absoluteRootDir,\n    envName,\n    caller\n  };\n  const configChain = yield* (0, _configChain.buildRootChain)(args, context);\n  if (!configChain) return null;\n  const options = {};\n  configChain.options.forEach(opts => {\n    (0, _util.mergeOptions)(options, opts);\n  });\n  options.babelrc = false;\n  options.configFile = false;\n  options.passPerPreset = false;\n  options.envName = context.envName;\n  options.cwd = context.cwd;\n  options.root = context.root;\n  options.filename = typeof context.filename === \"string\" ? context.filename : undefined;\n  options.plugins = configChain.plugins.map(descriptor => (0, _item.createItemFromDescriptor)(descriptor));\n  options.presets = configChain.presets.map(descriptor => (0, _item.createItemFromDescriptor)(descriptor));\n  return {\n    options,\n    context,\n    ignore: configChain.ignore,\n    babelrc: configChain.babelrc,\n    config: configChain.config\n  };\n}\n\nconst loadPartialConfig = (0, _gensync().default)(function* (inputOpts) {\n  const result = yield* loadPrivatePartialConfig(inputOpts);\n  if (!result) return null;\n  const {\n    options,\n    babelrc,\n    ignore,\n    config\n  } = result;\n  (options.plugins || []).forEach(item => {\n    if (item.value instanceof _plugin.default) {\n      throw new Error(\"Passing cached plugin instances is not supported in \" + \"babel.loadPartialConfig()\");\n    }\n  });\n  return new PartialConfig(options, babelrc ? babelrc.filepath : undefined, ignore ? ignore.filepath : undefined, config ? config.filepath : undefined);\n});\nexports.loadPartialConfig = loadPartialConfig;\n\nclass PartialConfig {\n  constructor(options, babelrc, ignore, config) {\n    this.options = options;\n    this.babelignore = ignore;\n    this.babelrc = babelrc;\n    this.config = config;\n    Object.freeze(this);\n  }\n\n  hasFilesystemConfig() {\n    return this.babelrc !== undefined || this.config !== undefined;\n  }\n\n}\n\nObject.freeze(PartialConfig.prototype);"]},"metadata":{},"sourceType":"script"}