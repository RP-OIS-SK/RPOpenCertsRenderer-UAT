{"ast":null,"code":"var _jsxFileName = \"/Users/Shared/opencerts/opencerts-renderer/src/components/templates/RPTemplate/common/transcript.js\";\nimport PropTypes from \"prop-types\";\nimport { get, groupBy } from \"lodash\";\nimport React from \"react\";\nimport { IMG_LOGO_RP_HORIZONTAL } from \"./images\";\nimport { formatDDMMMYYYY, formatBold, formatSignatoriesPosition } from \"./functions\";\nexport const fullWidthStyle = {\n  width: \"100%\",\n  height: \"auto\"\n};\nexport const fullTableWidthStyle = {\n  width: \"100%\",\n  border: \"1px solid black\",\n  height: \"auto\"\n};\nexport const thWidth60Left = {\n  width: \"60%\",\n  textAlign: \"left\"\n};\nexport const signatureTextStyle = {\n  color: \"#050\",\n  fontSize: \"1.0rem\"\n};\nexport const titleTextStyle = {\n  fontSize: \"2.0rem\",\n  textAlign: \"center\",\n  fontWeight: \"bold\"\n};\nexport const boxStyle = {\n  border: 2,\n  borderColor: \"#AAA\",\n  borderStyle: \"solid\",\n  textAlign: \"center\"\n};\nexport const renderHeader = () => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"row\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"col-4\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  style: fullWidthStyle,\n  src: IMG_LOGO_RP_HORIZONTAL,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"col\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"col-7\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  style: titleTextStyle,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }\n}, \"TRANSCRIPT OF ACADEMIC RECORD\"))); // additional remarks for PET only\n\nexport const renderRemarksGradingSystem = (is2020, isCET) => /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }\n}), isCET ? null : \"Incomplete Grade is implemented from Academic Year 2012 Semester 2 onwards\\n\", !isCET && /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 16\n  }\n}), isCET ? \"Non-Graded Pass Grade is implemented from March 2022 onwards.\" : \"Non-Graded Pass Grade is implemented from Academic Year 2020 onwards.\", /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }\n}), isCET ? null : \"A module for which grade point or modular credit is not accorded will not be considered in the computation of the cGPA.\\n\");\nexport const renderTableHeader = isPFP => /*#__PURE__*/React.createElement(\"tr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"th\", {\n  style: {\n    width: \"25%\",\n    textDecoration: \"underline\",\n    paddingLeft: \"10px\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }\n}, \"Grade\"), isPFP ? /*#__PURE__*/React.createElement(\"th\", {\n  style: {\n    width: \"25%\",\n    textDecoration: \"underline\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }\n}) : /*#__PURE__*/React.createElement(\"th\", {\n  style: {\n    width: \"25%\",\n    textDecoration: \"underline\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }\n}, \"Point\"), /*#__PURE__*/React.createElement(\"th\", {\n  style: {\n    width: \"50%\",\n    textDecoration: \"underline\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }\n}, \"Description\"));\nexport const renderBlankLine = () => /*#__PURE__*/React.createElement(\"tr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"td\", {\n  style: {\n    paddingLeft: \"10px\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }\n}, \"\\xA0\", /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }\n}, \"\\xA0\"), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }\n}, \"\\xA0\"));\nexport const renderGradeList = listGrade => {\n  const strList = listGrade.map((obj, i) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      paddingLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, obj.grade), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, obj.score), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, obj.desc)));\n  return strList;\n};\nexport const renderGradingSystem = document => {\n  // get the template name\n  const strTemplate = get(document, \"$template.name\"); // check it is PET template  - position 16 for scheme 1.4, position 9 for scheme 2.0\n\n  const isCET = strTemplate.substr(8, 6) === \"P_MAIN\" ? 0 : 1;\n  const isPFP = strTemplate.substr(8, 5) === \"P_PFP\" ? 1 : 0; // RP_ 2022_P_ PFP    \n  // 0 12 3456789 01234\n  // check whether it is DPLUS template\n  // const isNOTDPLUS = strTemplate.substr(8, 4) === \"C_DP\" ? 0 : 1;\n  // RP_2020_P_MAIN\n\n  const is2020 = strTemplate.substr(3, 4) === \"2020\" ? 1 : 0;\n  const listGradeText1L = [{\n    grade: \"A\",\n    score: \"4.0\",\n    desc: \"Excellent\"\n  }, {\n    grade: \"B+\",\n    score: \"3.5\",\n    desc: \"Very Good\"\n  }, {\n    grade: \"B\",\n    score: \"3.0\",\n    desc: \"Good\"\n  }, {\n    grade: \"C+\",\n    score: \"2.5\",\n    desc: \"Satisfactory\"\n  }, {\n    grade: \"C\",\n    score: \"2.0\",\n    desc: \"Acceptable\"\n  }, {\n    grade: \"D+\",\n    score: \"1.5\",\n    desc: \"Conditional Pass\"\n  }, {\n    grade: \"D\",\n    score: \"1.0\",\n    desc: \"Conditional Pass\"\n  }];\n  const listGradeText1RP = [{\n    grade: \"P\",\n    score: \"2.0\",\n    desc: \"Pass\"\n  }, {\n    grade: \"E\",\n    score: \"0.5\",\n    desc: \"Fail\"\n  }, {\n    grade: \"F\",\n    score: \"0.0\",\n    desc: \"Fail\"\n  }, {\n    grade: \"N\",\n    score: \"-\",\n    desc: \"Null(Defaulted)\"\n  }, {\n    grade: \"Pass*\",\n    score: \"-\",\n    desc: \"Pass with Commendation\"\n  }, {\n    grade: \"Pass\",\n    score: \"-\",\n    desc: \"Pass\"\n  }, {\n    grade: \"Fail\",\n    score: \"-\",\n    desc: \"Fail\"\n  }];\n  const listGradeText1R = [{\n    grade: \"P\",\n    score: \"2.0\",\n    desc: \"Pass\"\n  }, {\n    grade: \"E\",\n    score: \"0.5\",\n    desc: \"Fail\"\n  }, {\n    grade: \"F\",\n    score: \"0.0\",\n    desc: \"Fail\"\n  }, {\n    grade: \"N\",\n    score: \"-\",\n    desc: \"Null(Defaulted)\"\n  }, {\n    grade: \"Pass*\",\n    score: \"-\",\n    desc: \"Pass with Commendation\"\n  }, {\n    grade: \"Pass\",\n    score: \"-\",\n    desc: \"Pass\"\n  }, {\n    grade: \"Fail\",\n    score: \"-\",\n    desc: \"Fail\"\n  }];\n  const listGradeText2LP = [{\n    grade: \"DIST\",\n    score: \"4.0\",\n    desc: \"Distinction^\"\n  }, {\n    grade: \"A\",\n    score: \"4.0\",\n    desc: \"Excellent\"\n  }, {\n    grade: \"B+\",\n    score: \"3.5\",\n    desc: \"Very Good\"\n  }, {\n    grade: \"B\",\n    score: \"3.0\",\n    desc: \"Very Good\"\n  }, {\n    grade: \"C+\",\n    score: \"2.5\",\n    desc: \"Good\"\n  }, {\n    grade: \"C\",\n    score: \"2.0\",\n    desc: \"Good\"\n  }, {\n    grade: \"D+\",\n    score: \"1.5\",\n    desc: \"Pass\"\n  }, {\n    grade: \"D\",\n    score: \"1.0\",\n    desc: \"Pass\"\n  }];\n  const listGradeText2RP = [{\n    grade: \"NGP\",\n    score: \"1.0\",\n    desc: \"Non-Graded Pass\"\n  }, {\n    grade: \"F\",\n    score: \"0.0\",\n    desc: \"Fail\"\n  }, {\n    grade: \"Pass*\",\n    score: \"-\",\n    desc: \"Pass with Commendation\"\n  }, {\n    grade: \"Pass\",\n    score: \"-\",\n    desc: \"Pass\"\n  }, {\n    grade: \"Fail\",\n    score: \"-\",\n    desc: \"Fail\"\n  }, {\n    grade: \"Exempted\",\n    score: \"-\",\n    desc: \"Exempted from taking the module\"\n  }, {\n    grade: \"Incomplete\",\n    score: \"-\",\n    desc: \"Incomplete\"\n  }];\n  const listGradeText2L = [{\n    grade: \"DIST\",\n    score: \"4.0\",\n    desc: \"Distinction^\"\n  }, {\n    grade: \"A\",\n    score: \"4.0\",\n    desc: \"Excellent\"\n  }, {\n    grade: \"B+\",\n    score: \"3.5\",\n    desc: \"Very Good\"\n  }, {\n    grade: \"B\",\n    score: \"3.0\",\n    desc: \"Very Good\"\n  }, {\n    grade: \"C+\",\n    score: \"2.5\",\n    desc: \"Good\"\n  }, {\n    grade: \"C\",\n    score: \"2.0\",\n    desc: \"Good\"\n  }, {\n    grade: \"D+\",\n    score: \"1.5\",\n    desc: \"Pass\"\n  }];\n  const listGradeText2R = [{\n    grade: \"D\",\n    score: \"1.0\",\n    desc: \"Pass\"\n  }, {\n    grade: \"NGP\",\n    score: \"1.0\",\n    desc: \"Non-Graded Pass\"\n  }, {\n    grade: \"F\",\n    score: \"0.0\",\n    desc: \"Fail\"\n  }, {\n    grade: \"Pass*\",\n    score: \"-\",\n    desc: \"Pass with Commendation\"\n  }, {\n    grade: \"Pass\",\n    score: \"-\",\n    desc: \"Pass\"\n  }, {\n    grade: \"Fail\",\n    score: \"-\",\n    desc: \"Fail\"\n  }, {\n    grade: \"Exempted\",\n    score: \"-\",\n    desc: \"Exempted from taking the module\"\n  }];\n  const listGradeTextPFPL = [{\n    grade: \"DIST\",\n    score: \"\",\n    desc: \"Distinction\"\n  }, {\n    grade: \"A\",\n    score: \"\",\n    desc: \"Excellent\"\n  }, {\n    grade: \"B+\",\n    score: \"\",\n    desc: \"Very Good\"\n  }, {\n    grade: \"B\",\n    score: \"\",\n    desc: \"Very Good\"\n  }, {\n    grade: \"C+\",\n    score: \"\",\n    desc: \"Good\"\n  }];\n  const listGradeTextPFPR = [{\n    grade: \"C\",\n    score: \"\",\n    desc: \"Good\"\n  }, {\n    grade: \"D+\",\n    score: \"\",\n    desc: \"Pass\"\n  }, {\n    grade: \"D\",\n    score: \"\",\n    desc: \"Pass\"\n  }, {\n    grade: \"P\",\n    score: \"\",\n    desc: \"Pass\"\n  }, {\n    grade: \"F\",\n    score: \"\",\n    desc: \"Fail\"\n  }];\n  /*\n  const listGradeTextO2R = [\n    { grade: \"F\", score: \"0.0\", desc: \"Fail\" },\n    { grade: \"Pass*\", score: \"-\", desc: \"Pass with Commendation\" },\n    { grade: \"Pass\", score: \"-\", desc: \"Pass\" },\n    { grade: \"Fail\", score: \"-\", desc: \"Fail\" },\n    { grade: \"Exempted\", score: \"-\", desc: \"Exempted from taking the module\" }\n  ];\n  */\n  // if PET or DPLUS, display grading system otherwise do not display\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    style: {\n      fontSize: \"0.9rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }), isPFP > 0 ? \"Grading System\" : \"Academic Year 2003 to 2010\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    style: fullTableWidthStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }, renderTableHeader(isPFP), isPFP ? renderGradeList(listGradeTextPFPL) : renderGradeList(listGradeText1L)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    style: fullTableWidthStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 15\n    }\n  }, renderTableHeader(isPFP), isPFP ? renderGradeList(listGradeTextPFPR) : isCET ? renderGradeList(listGradeText1R) : renderGradeList(listGradeText1RP))))), isPFP ? null : /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 11\n    }\n  }), \"\\\"Academic Year 2011 onwards\\\"\"), isPFP ? null : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    style: fullTableWidthStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 15\n    }\n  }, renderTableHeader(isPFP), isCET ? renderGradeList(listGradeText2L) : renderGradeList(listGradeText2LP)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    style: fullTableWidthStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, renderTableHeader(isPFP), isPFP ? null : isCET ? renderGradeList(listGradeText2R) : renderGradeList(listGradeText2RP), is2020 > 3 && /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      paddingLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 21\n    }\n  }, isCET ? \" \" : \"Incomplete\", \" \\xA0\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 21\n    }\n  }, isCET ? null : \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 21\n    }\n  }, isCET ? null : \"Incomplete\")), is2020 > 3 && /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      paddingLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 21\n    }\n  }, isCET ? \" \" : \"NGP\", \" \\xA0\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 21\n    }\n  }, isCET ? null : \"1.0\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 21\n    }\n  }, isCET ? null : \"Non-Graded Pass\")), isCET ? null : renderBlankLine())))), isPFP ? null : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }\n  }, \"^Distinction is awarded from Academic Year 2012 onwards.\", renderRemarksGradingSystem(is2020, isCET)), isPFP ? null : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    style: {\n      padding: \"5px 5px 5px 5px\",\n      border: \"1px solid black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }\n  }, \" \", \"Advanced Placement Credits\", \" \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }\n  }), \"Advanced Placement Credits are granted by Republic Polytechnic for modules taken and awarded a passed grade prior to admission to the Polytechnic. In this regard, Republic Polytechnic recognises these modules that are completed either at another educational institution or based on performance placement tests set by the Polytechnic.\")), isPFP ? null : /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 11\n    }\n  }), \"The medium of instruction used in this Polytechnic is English.\")));\n};\nexport const renderCourse = (document, course) => {\n  // Get student info and course description\n  const recipientName = get(document, \"recipient.name\");\n  const recipientNric = get(document, \"recipient.nric\");\n  const recipientFin = get(document, \"recipient.fin\");\n  const recipientNricFin = !recipientNric ? recipientFin : recipientNric;\n  const studentId = get(document, \"recipient.studentId\");\n  const admissionDate = get(document, \"admissionDate\");\n  const graduationDate = get(document, \"graduationDate\");\n  const strTemplate = get(document, \"$template.name\");\n  const isCET = strTemplate.substr(8, 6) === \"P_MAIN\" ? 0 : 1;\n  const isPFP = strTemplate.substr(8, 5) === \"P_PFP\" ? 1 : 0;\n  const courseText = isPFP ? \"Polytechnic Foundation Programme for \" : null;\n  const moduleCodeTitle = isPFP ? \"MODULE CODE\" : \"MODULE\";\n  const moduleTitle = isPFP ? \"MODULE NAME\" : \"\"; // Group all modules by semesters\n\n  const groupedSubjects = groupBy(course, \"semester\");\n  const renderedSemesters = Object.keys(groupedSubjects).map(semester => groupedSubjects[semester].map((s, i) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }\n  }, isPFP ? null : /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 9\n    }\n  }, i || s.semester === \"-\" ? null : formatBold(s.semester.toString())), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 9\n    }\n  }, s.courseCode !== \"ZZZ\" ? s.courseCode : \"\"), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }\n  }, s.courseCode !== \"ZZZ\" || s.semester === \"-\" ? s.name : formatBold(s.name)), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 9\n    }\n  }, isCET > 0 || s.courseCredit === 0 || s.courseCredit === \"0\" ? \"\" : s.courseCredit), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 9\n    }\n  }, s.courseCode !== \"ZZZ\" ? s.grade.padEnd(2, \" \") : \"\", \"\\xA0\"))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 13\n    }\n  }, \":\\xA0\\xA0\", recipientName)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 13\n    }\n  }, \"Course\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 13\n    }\n  }, \":\\xA0\\xA0\", courseText, document.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 13\n    }\n  }, \"NRIC/FIN\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 13\n    }\n  }, \":\\xA0\\xA0\", recipientNricFin), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4 justify-content-right\",\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 13\n    }\n  }, \"Date of Admission:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-2 justify-content-right\",\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 13\n    }\n  }, formatDDMMMYYYY(admissionDate))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 13\n    }\n  }, \"Student ID\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 13\n    }\n  }, \":\\xA0\\xA0\", studentId || document.additionalData.studentId), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4 justify-content-right\",\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 13\n    }\n  }, \"Date of Endorsement:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-2 justify-content-right\",\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 13\n    }\n  }, formatDDMMMYYYY(graduationDate))))), /*#__PURE__*/React.createElement(\"hr\", {\n    style: {\n      borderWidths: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    style: fullWidthStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 15\n    }\n  }, isPFP ? null : /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"u\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 19\n    }\n  }, isCET ? \"TERM\" : \"SEMESTER\")), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"u\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 19\n    }\n  }, moduleCodeTitle)), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"u\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 51\n    }\n  }, moduleTitle)), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"u\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 19\n    }\n  }, isCET > 0 ? \"\" : \"MODULAR CREDITS\")), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"u\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 19\n    }\n  }, \"GRADE\"))), renderedSemesters)))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 7\n    }\n  }));\n};\nexport const renderTranscript = document => {\n  // Group all modules by courses\n  const transcript = get(document, \"transcript\"); // const groupedCourses = groupBy(transcript, \"semester\");\n\n  const renderedCourses = renderCourse(document, transcript);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 10\n    }\n  }, renderedCourses);\n}; // display GPA for PET and DPLUS\n\nexport const renderPETGPA = GPA => /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 492,\n    columnNumber: 3\n  }\n}, \"Grade Point Average (GPA): \", GPA.toFixed(2), \" /4.00\", /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 494,\n    columnNumber: 5\n  }\n}));\nexport const renderGPA = document => {\n  const GPA = get(document, \"cumulativeScore\", undefined);\n  const WithMerit = get(document, \"additionalData.merit\");\n  const WithMeritTag = WithMerit === \"Y\" ? \"with Merit\" : \"\";\n  const strTemplate = get(document, \"$template.name\");\n  const isCET = strTemplate.substr(8, 6) === \"P_MAIN\" ? 0 : 1;\n  const isNOTDPLUS = strTemplate.substr(8, 4) === \"C_DP\" ? 0 : 1;\n  const isNOTDCN = strTemplate.substr(8, 4) === \"C_DC\" ? 0 : 1;\n  const isPFP = strTemplate.substr(8, 5) === \"P_PFP\" ? 1 : 0; // const AwardText = isPFP ? \"Completed the Polytechnic Foundation Programme for <br />\" + document.name : \"Awarded the \" + formatBold(document.name) + formatBold(WithMeritTag);\n\n  return GPA ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    style: boxStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 7\n    }\n  }, isNOTDPLUS && isCET && isNOTDCN ? null : renderPETGPA(GPA), isPFP ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 12\n    }\n  }, \"Completed the Polytechnic Foundation Programme for \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 69\n    }\n  }), \"  \", document.name) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 9\n    }\n  }, \"Awarded the  \", formatBold(document.name), \" \", formatBold(WithMeritTag)), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 7\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 9\n    }\n  }), \"----------------------------------------------------\", \" \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 9\n    }\n  }, \"End of Transcript\"), \"----------------------------------------------------\", \" \")) : null;\n};\nexport const renderSignature = document => {\n  const certSign = formatSignatoriesPosition(document.additionalData.transcriptSignatories[0].position);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row d-flex justify-content-center align-items-end\",\n    style: {\n      marginTop: \"8rem\",\n      marginBottom: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: fullWidthStyle,\n    src: document.additionalData.transcriptSignatories[0].signature,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: signatureTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 11\n    }\n  }, certSign[0]), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: signatureTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 11\n    }\n  }, certSign.length > 0 ? certSign[1] : null), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 11\n    }\n  }), document.additionalData.transcriptId)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst Template = ({\n  document\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"container\",\n  style: {\n    fontSize: \"0.9rem\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 570,\n    columnNumber: 3\n  }\n}, renderHeader(), renderTranscript(document), renderGPA(document), renderSignature(document), renderGradingSystem(document));\n\nTemplate.propTypes = {\n  document: PropTypes.object.isRequired\n};\nexport default Template;","map":{"version":3,"sources":["/Users/Shared/opencerts/opencerts-renderer/src/components/templates/RPTemplate/common/transcript.js"],"names":["PropTypes","get","groupBy","React","IMG_LOGO_RP_HORIZONTAL","formatDDMMMYYYY","formatBold","formatSignatoriesPosition","fullWidthStyle","width","height","fullTableWidthStyle","border","thWidth60Left","textAlign","signatureTextStyle","color","fontSize","titleTextStyle","fontWeight","boxStyle","borderColor","borderStyle","renderHeader","renderRemarksGradingSystem","is2020","isCET","renderTableHeader","isPFP","textDecoration","paddingLeft","renderBlankLine","renderGradeList","listGrade","strList","map","obj","i","grade","score","desc","renderGradingSystem","document","strTemplate","substr","listGradeText1L","listGradeText1RP","listGradeText1R","listGradeText2LP","listGradeText2RP","listGradeText2L","listGradeText2R","listGradeTextPFPL","listGradeTextPFPR","padding","renderCourse","course","recipientName","recipientNric","recipientFin","recipientNricFin","studentId","admissionDate","graduationDate","courseText","moduleCodeTitle","moduleTitle","groupedSubjects","renderedSemesters","Object","keys","semester","s","toString","courseCode","name","courseCredit","padEnd","additionalData","borderWidths","renderTranscript","transcript","renderedCourses","renderPETGPA","GPA","toFixed","renderGPA","undefined","WithMerit","WithMeritTag","isNOTDPLUS","isNOTDCN","renderSignature","certSign","transcriptSignatories","position","marginTop","marginBottom","signature","length","transcriptId","Template","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport { get, groupBy } from \"lodash\";\nimport React from \"react\";\nimport { IMG_LOGO_RP_HORIZONTAL } from \"./images\";\nimport {\n  formatDDMMMYYYY,\n  formatBold,\n  formatSignatoriesPosition\n} from \"./functions\";\n\nexport const fullWidthStyle = {\n  width: \"100%\",\n  height: \"auto\"\n};\n\nexport const fullTableWidthStyle = {\n  width: \"100%\",\n  border: \"1px solid black\",\n  height: \"auto\"\n};\n\nexport const thWidth60Left = {\n  width: \"60%\",\n  textAlign: \"left\"\n};\n\nexport const signatureTextStyle = {\n  color: \"#050\",\n  fontSize: \"1.0rem\"\n};\n\nexport const titleTextStyle = {\n  fontSize: \"2.0rem\",\n  textAlign: \"center\",\n  fontWeight: \"bold\"\n};\n\nexport const boxStyle = {\n  border: 2,\n  borderColor: \"#AAA\",\n  borderStyle: \"solid\",\n  textAlign: \"center\"\n};\n\nexport const renderHeader = () => (\n  <div className=\"row\">\n    <div className=\"col-4\">\n      <img style={fullWidthStyle} src={IMG_LOGO_RP_HORIZONTAL} />\n    </div>\n    <div className=\"col\" />\n    <div className=\"col-7\">\n      <div style={titleTextStyle}>TRANSCRIPT OF ACADEMIC RECORD</div>\n    </div>\n  </div>\n);\n\n// additional remarks for PET only\nexport const renderRemarksGradingSystem = (is2020, isCET) => (\n  <span>\n    <br />\n    {isCET\n      ? null\n      : \"Incomplete Grade is implemented from Academic Year 2012 Semester 2 onwards\\n\"}\n    {!isCET && <br />}\n    {isCET\n      ? \"Non-Graded Pass Grade is implemented from March 2022 onwards.\"\n      : \"Non-Graded Pass Grade is implemented from Academic Year 2020 onwards.\"}\n    <br />\n    {isCET\n      ? null\n      : \"A module for which grade point or modular credit is not accorded will not be considered in the computation of the cGPA.\\n\"}\n  </span>\n);\n\nexport const renderTableHeader = (isPFP) => (\n  <tr>\n    <th\n      style={{\n        width: \"25%\",\n        textDecoration: \"underline\",\n        paddingLeft: \"10px\"\n      }}\n    >\n      Grade\n    </th>\n    {isPFP ? (\n    <th style={{ width: \"25%\", textDecoration: \"underline\" }}></th>\n    ):  (\n    <th style={{ width: \"25%\", textDecoration: \"underline\" }}>Point</th>\n    )}\n    <th style={{ width: \"50%\", textDecoration: \"underline\" }}>Description</th>\n  </tr>\n);\n\nexport const renderBlankLine = () => (\n  <tr>\n    <td style={{ paddingLeft: \"10px\" }}>\n      &nbsp;\n      <br />\n    </td>\n    <td>&nbsp;</td>\n    <td>&nbsp;</td>\n  </tr>\n);\n\nexport const renderGradeList = listGrade => {\n  const strList = listGrade.map((obj, i) => (\n    <tr key={i}>\n      <td style={{ paddingLeft: \"10px\" }}>{obj.grade}</td>\n      <td>{obj.score}</td>\n      <td>{obj.desc}</td>\n    </tr>\n  ));\n  return strList;\n};\n\nexport const renderGradingSystem = document => {\n  // get the template name\n  const strTemplate = get(document, \"$template.name\");\n  // check it is PET template  - position 16 for scheme 1.4, position 9 for scheme 2.0\n  const isCET = strTemplate.substr(8, 6) === \"P_MAIN\" ? 0 : 1;\n  const isPFP = strTemplate.substr(8, 5) === \"P_PFP\" ? 1 : 0;\n  // RP_ 2022_P_ PFP    \n  // 0 12 3456789 01234\n  \n  // check whether it is DPLUS template\n  // const isNOTDPLUS = strTemplate.substr(8, 4) === \"C_DP\" ? 0 : 1;\n  // RP_2020_P_MAIN\n  const is2020 = strTemplate.substr(3, 4) === \"2020\" ? 1 : 0;\n  \n  const listGradeText1L = [\n    { grade: \"A\", score: \"4.0\", desc: \"Excellent\" },\n    { grade: \"B+\", score: \"3.5\", desc: \"Very Good\" },\n    { grade: \"B\", score: \"3.0\", desc: \"Good\" },\n    { grade: \"C+\", score: \"2.5\", desc: \"Satisfactory\" },\n    { grade: \"C\", score: \"2.0\", desc: \"Acceptable\" },\n    { grade: \"D+\", score: \"1.5\", desc: \"Conditional Pass\" },\n    { grade: \"D\", score: \"1.0\", desc: \"Conditional Pass\" }\n  ];\n  const listGradeText1RP = [\n    { grade: \"P\", score: \"2.0\", desc: \"Pass\" },\n    { grade: \"E\", score: \"0.5\", desc: \"Fail\" },\n    { grade: \"F\", score: \"0.0\", desc: \"Fail\" },\n    { grade: \"N\", score: \"-\", desc: \"Null(Defaulted)\" },\n    { grade: \"Pass*\", score: \"-\", desc: \"Pass with Commendation\" },\n    { grade: \"Pass\", score: \"-\", desc: \"Pass\" },\n    { grade: \"Fail\", score: \"-\", desc: \"Fail\" }\n  ];\n  const listGradeText1R = [\n    { grade: \"P\", score: \"2.0\", desc: \"Pass\" },\n    { grade: \"E\", score: \"0.5\", desc: \"Fail\" },\n    { grade: \"F\", score: \"0.0\", desc: \"Fail\" },\n    { grade: \"N\", score: \"-\", desc: \"Null(Defaulted)\" },\n    { grade: \"Pass*\", score: \"-\", desc: \"Pass with Commendation\" },\n    { grade: \"Pass\", score: \"-\", desc: \"Pass\" },\n    { grade: \"Fail\", score: \"-\", desc: \"Fail\" }\n  ];\n\n  const listGradeText2LP = [\n    { grade: \"DIST\", score: \"4.0\", desc: \"Distinction^\" },\n    { grade: \"A\", score: \"4.0\", desc: \"Excellent\" },\n    { grade: \"B+\", score: \"3.5\", desc: \"Very Good\" },\n    { grade: \"B\", score: \"3.0\", desc: \"Very Good\" },\n    { grade: \"C+\", score: \"2.5\", desc: \"Good\" },\n    { grade: \"C\", score: \"2.0\", desc: \"Good\" },\n    { grade: \"D+\", score: \"1.5\", desc: \"Pass\" },\n    { grade: \"D\", score: \"1.0\", desc: \"Pass\" }\n  ];\n\n  const listGradeText2RP = [\n    { grade: \"NGP\", score: \"1.0\", desc: \"Non-Graded Pass\" },\n    { grade: \"F\", score: \"0.0\", desc: \"Fail\" },\n    { grade: \"Pass*\", score: \"-\", desc: \"Pass with Commendation\" },\n    { grade: \"Pass\", score: \"-\", desc: \"Pass\" },\n    { grade: \"Fail\", score: \"-\", desc: \"Fail\" },\n    { grade: \"Exempted\", score: \"-\", desc: \"Exempted from taking the module\" },\n    { grade: \"Incomplete\", score: \"-\", desc: \"Incomplete\" }\n  ];\n  const listGradeText2L = [\n    { grade: \"DIST\", score: \"4.0\", desc: \"Distinction^\" },\n    { grade: \"A\", score: \"4.0\", desc: \"Excellent\" },\n    { grade: \"B+\", score: \"3.5\", desc: \"Very Good\" },\n    { grade: \"B\", score: \"3.0\", desc: \"Very Good\" },\n    { grade: \"C+\", score: \"2.5\", desc: \"Good\" },\n    { grade: \"C\", score: \"2.0\", desc: \"Good\" },\n    { grade: \"D+\", score: \"1.5\", desc: \"Pass\" }\n  ];\n\n  const listGradeText2R = [\n    { grade: \"D\", score: \"1.0\", desc: \"Pass\" },\n    { grade: \"NGP\", score: \"1.0\", desc: \"Non-Graded Pass\" },\n    { grade: \"F\", score: \"0.0\", desc: \"Fail\" },\n    { grade: \"Pass*\", score: \"-\", desc: \"Pass with Commendation\" },\n    { grade: \"Pass\", score: \"-\", desc: \"Pass\" },\n    { grade: \"Fail\", score: \"-\", desc: \"Fail\" },\n    { grade: \"Exempted\", score: \"-\", desc: \"Exempted from taking the module\" }\n  ];\n  \n  const listGradeTextPFPL = [\n    { grade: \"DIST\", score: \"\", desc: \"Distinction\" },\n    { grade: \"A\", score: \"\", desc: \"Excellent\" },\n    { grade: \"B+\", score: \"\", desc: \"Very Good\" },\n    { grade: \"B\", score: \"\", desc: \"Very Good\" },\n    { grade: \"C+\", score: \"\", desc: \"Good\" }\n  ];\n\n  const listGradeTextPFPR = [\n    { grade: \"C\", score: \"\", desc: \"Good\" },\n    { grade: \"D+\", score: \"\", desc: \"Pass\" },\n    { grade: \"D\", score: \"\", desc: \"Pass\" },\n    { grade: \"P\", score: \"\", desc: \"Pass\" },\n    { grade: \"F\", score: \"\", desc: \"Fail\" }\n  ];\n\n\n  /*\n  const listGradeTextO2R = [\n    { grade: \"F\", score: \"0.0\", desc: \"Fail\" },\n    { grade: \"Pass*\", score: \"-\", desc: \"Pass with Commendation\" },\n    { grade: \"Pass\", score: \"-\", desc: \"Pass\" },\n    { grade: \"Fail\", score: \"-\", desc: \"Fail\" },\n    { grade: \"Exempted\", score: \"-\", desc: \"Exempted from taking the module\" }\n  ];\n*/\n  // if PET or DPLUS, display grading system otherwise do not display\n  return (\n    <div className=\"row\">\n      <div className=\"col-12\" />\n      <div className=\"col-12\" style={{ fontSize: \"0.9rem\" }}>\n        <p style={{ fontWeight: \"bold\" }}>\n          <br />\n          {isPFP > 0 ? (\n          \"Grading System\"\n          ) : (\n              \"Academic Year 2003 to 2010\"\n              )} \n        </p>\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <table style={fullTableWidthStyle}>\n              <tbody>\n                {renderTableHeader(isPFP)}\n                {isPFP\n                 ? renderGradeList(listGradeTextPFPL)\n                 : renderGradeList(listGradeText1L)}\n              </tbody>\n            </table>\n          </div>\n          <div className=\"col-6\">\n            <table style={fullTableWidthStyle}>\n              <tbody>\n                {renderTableHeader(isPFP)}\n                {isPFP ? renderGradeList(listGradeTextPFPR)\n                  : isCET\n                  ? renderGradeList(listGradeText1R)\n                  : renderGradeList(listGradeText1RP)}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        { isPFP ? null : (\n        <p style={{fontWeight: \"bold\" }}>\n          <br />\"Academic Year 2011 onwards\" \n        </p>\n        )} \n        { isPFP ? null : (\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <table style={fullTableWidthStyle}>\n              <tbody>\n                {renderTableHeader(isPFP)}\n                {isCET\n                  ? renderGradeList(listGradeText2L)\n                  : renderGradeList(listGradeText2LP)}\n              </tbody>\n            </table>\n          </div>\n          <div className=\"col-6\">\n            <table style={fullTableWidthStyle}>\n              <tbody>\n                {renderTableHeader(isPFP)}\n                {isPFP\n                 ? null \n                 : isCET\n                  ? renderGradeList(listGradeText2R)\n                  : renderGradeList(listGradeText2RP)}\n                {is2020 > 3 && (\n                  <tr>\n                    <td style={{ paddingLeft: \"10px\" }}>\n                      {isCET ? \" \" : \"Incomplete\"} &nbsp;\n                    </td>\n                    <td>{isCET ? null : \"-\"}</td>\n                    <td>{isCET ? null : \"Incomplete\"}</td>\n                  </tr>\n                )}\n                {is2020 > 3 && (\n                  <tr>\n                    <td style={{ paddingLeft: \"10px\" }}>\n                      {isCET ? \" \" : \"NGP\"} &nbsp;\n                    </td>\n                    <td>{isCET ? null : \"1.0\"}</td>\n                    <td>{isCET ? null : \"Non-Graded Pass\"}</td>\n                  </tr>\n                )}\n                {isCET ? null : renderBlankLine()}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        )} \n         { isPFP ? null : (\n        <p>\n          ^Distinction is awarded from Academic Year 2012 onwards.\n          {renderRemarksGradingSystem(is2020, isCET)}\n        </p>\n        )} \n         { isPFP ? null : (\n        <div className=\"row\" style={{ padding: \"5px 5px 5px 5px\", border: \"1px solid black\" }}>\n          <p>\n            <span style={{ fontWeight: \"bold\" }}>\n              {\" \"}\n              Advanced Placement Credits{\" \"}\n            </span>{\" \"}\n            <br />\n            Advanced Placement Credits are granted by Republic Polytechnic for\n            modules taken and awarded a passed grade prior to admission to the\n            Polytechnic. In this regard, Republic Polytechnic recognises these\n            modules that are completed either at another educational institution\n            or based on performance placement tests set by the Polytechnic.\n          </p>\n        </div>\n        )}\n         { isPFP ? null : (\n        <p style={{ fontWeight: \"bold\" }}>\n          <br />\n          The medium of instruction used in this Polytechnic is English.\n        </p>\n        )}\n      </div>\n      \n    </div>\n  );\n};\n\nexport const renderCourse = (document, course) => {\n  // Get student info and course description\n  const recipientName = get(document, \"recipient.name\");\n  const recipientNric = get(document, \"recipient.nric\");\n  const recipientFin = get(document, \"recipient.fin\");\n  const recipientNricFin = !recipientNric ? recipientFin : recipientNric;\n  const studentId = get(document, \"recipient.studentId\");\n  const admissionDate = get(document, \"admissionDate\");\n  const graduationDate = get(document, \"graduationDate\");\n  const strTemplate = get(document, \"$template.name\");\n  const isCET = strTemplate.substr(8, 6) === \"P_MAIN\" ? 0 : 1;\n  const isPFP = strTemplate.substr(8, 5) === \"P_PFP\" ? 1 : 0;\n  const courseText = isPFP ? \"Polytechnic Foundation Programme for \": null; \n  const moduleCodeTitle = isPFP ? \"MODULE CODE\" : \"MODULE\"; \n  const moduleTitle = isPFP ? \"MODULE NAME\" : \"\";  \n  // Group all modules by semesters\n  const groupedSubjects = groupBy(course, \"semester\");\n\n  const renderedSemesters = Object.keys(groupedSubjects).map(semester =>\n    groupedSubjects[semester].map((s, i) => (\n      <tr key={i}>\n       {isPFP ? null : (\n        <td style={{ textAlign: \"left\" }}>\n          {i || s.semester === \"-\" ? null : formatBold(s.semester.toString())}\n        </td>\n        )}\n        <td style={{ textAlign: \"left\" }}>\n          {s.courseCode !== \"ZZZ\" ? s.courseCode : \"\"}\n        </td>\n        <td style={{ textAlign: \"left\" }}>\n          {s.courseCode !== \"ZZZ\" || s.semester === \"-\"\n            ? s.name\n            : formatBold(s.name)}\n        </td>\n        <td style={{ textAlign: \"left\" }}>\n          {isCET > 0 || s.courseCredit === 0 || s.courseCredit === \"0\"\n            ? \"\"\n            : s.courseCredit}\n        </td>\n        <td style={{ textAlign: \"left\" }}>{s.courseCode !== \"ZZZ\" ? s.grade.padEnd(2, \" \") : \"\"}&nbsp;</td>\n      </tr>\n    ))\n  );\n\n  return (\n    <div>\n      <br />\n\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"row\">\n            <div className=\"col-2\">Name</div>\n            <div className=\"col-10\">\n              :&nbsp;&nbsp;\n              {recipientName}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-2\">Course</div>\n            <div className=\"col-10\">\n              :&nbsp;&nbsp;\n              {courseText}{document.name}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-2\">NRIC/FIN</div>\n            <div className=\"col-4\">\n              :&nbsp;&nbsp;\n              {recipientNricFin}\n            </div>\n            <div\n              className=\"col-4 justify-content-right\"\n              style={{ textAlign: \"right\" }}\n            >\n              Date of Admission:\n            </div>\n            <div\n              className=\"col-2 justify-content-right\"\n              style={{ textAlign: \"right\" }}\n            >\n              {formatDDMMMYYYY(admissionDate)}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-2\">Student ID</div>\n            <div className=\"col-4\">\n              :&nbsp;&nbsp;\n              {studentId || document.additionalData.studentId}\n            </div>\n            <div\n              className=\"col-4 justify-content-right\"\n              style={{ textAlign: \"right\" }}\n            >\n              Date of Endorsement:\n            </div>\n            <div\n              className=\"col-2 justify-content-right\"\n              style={{ textAlign: \"right\" }}\n            >\n              {formatDDMMMYYYY(graduationDate)}\n            </div>\n          </div>\n        </div>\n      </div>\n      <hr style={{ borderWidths: \"2rem\" }} />\n      <div className=\"row\">\n        <div className=\"col text-center\">\n          <table style={fullWidthStyle}>\n            <tbody>\n              <tr>\n               {isPFP ? null : (\n                <th style={{ textAlign: \"left\" }}>\n                  <u>{isCET ? \"TERM\" : \"SEMESTER\"}</u>\n                </th>\n                )}\n                <th style={{ textAlign: \"left\" }}>\n                  <u>{moduleCodeTitle}</u>\n                </th>\n                <th style={{ textAlign: \"left\" }}><u>{moduleTitle}</u></th>\n                <th>\n                  <u>{isCET > 0 ? \"\" : \"MODULAR CREDITS\"}</u>\n                </th>\n                <th style={{ textAlign: \"left\" }}>\n                  <u>GRADE</u>\n                </th>\n              </tr>\n              {renderedSemesters}\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <br />\n    </div>\n  );\n};\n\nexport const renderTranscript = document => {\n  // Group all modules by courses\n  const transcript = get(document, \"transcript\");\n  // const groupedCourses = groupBy(transcript, \"semester\");\n  const renderedCourses = renderCourse(document, transcript);\n\n  return <div>{renderedCourses}</div>;\n};\n\n// display GPA for PET and DPLUS\nexport const renderPETGPA = GPA => (\n  <span>\n    Grade Point Average (GPA): {GPA.toFixed(2)} /4.00\n    <br />\n  </span>\n);\n\nexport const renderGPA = document => {\n  const GPA = get(document, \"cumulativeScore\", undefined);\n  const WithMerit = get(document, \"additionalData.merit\");\n  const WithMeritTag = WithMerit === \"Y\" ? \"with Merit\" : \"\";\n  const strTemplate = get(document, \"$template.name\");\n  const isCET = strTemplate.substr(8, 6) === \"P_MAIN\" ? 0 : 1;\n  const isNOTDPLUS = strTemplate.substr(8, 4) === \"C_DP\" ? 0 : 1;\n  const isNOTDCN = strTemplate.substr(8, 4) === \"C_DC\" ? 0 : 1;\n  const isPFP = strTemplate.substr(8, 5) === \"P_PFP\" ? 1 : 0;\n // const AwardText = isPFP ? \"Completed the Polytechnic Foundation Programme for <br />\" + document.name : \"Awarded the \" + formatBold(document.name) + formatBold(WithMeritTag);\n  return GPA ? (\n    <div className=\"row\">\n      <div className=\"col-3\"> </div>\n      <div className=\"col-6\" style={boxStyle}>\n        {isNOTDPLUS && isCET && isNOTDCN ? null : renderPETGPA(GPA)}\n        {isPFP ? (\n           <span>Completed the Polytechnic Foundation Programme for <br />  {document.name}</span>\n        ) : (\n        <span>Awarded the  {formatBold(document.name)} {formatBold(WithMeritTag)}</span>\n        )}\n        <br />\n      </div>\n      <div className=\"col-3\"> </div>\n\n      <div className=\"col-12 text-center\">\n        <br />\n        ----------------------------------------------------{\" \"}\n        <strong>End of Transcript</strong>\n        ----------------------------------------------------{\" \"}\n      </div>\n    </div>\n  ) : null;\n};\n\nexport const renderSignature = document => {\n  const certSign = formatSignatoriesPosition(\n    document.additionalData.transcriptSignatories[0].position\n  );\n  return (\n    <div\n      className=\"row d-flex justify-content-center align-items-end\"\n      style={{ marginTop: \"8rem\", marginBottom: \"2rem\" }}\n    >\n      <div className=\"col-6\" />\n\n      <div className=\"col-4\">\n        <div className=\"px-4\">\n          <img\n            style={fullWidthStyle}\n            src={document.additionalData.transcriptSignatories[0].signature}\n          />\n          <hr />\n        </div>\n        <div className=\"text-center\">\n          <span style={signatureTextStyle}>{certSign[0]}</span>\n          <br />\n          <span style={signatureTextStyle}>\n            {certSign.length > 0 ? certSign[1] : null}\n          </span>\n          <br />\n          <br />\n          <br />\n          {document.additionalData.transcriptId}\n        </div>\n      </div>\n\n      <div className=\"col-2\" />\n    </div>\n  );\n};\n\nconst Template = ({ document }) => (\n  <div className=\"container\" style={{ fontSize: \"0.9rem\" }}>\n    {renderHeader()}\n    {renderTranscript(document)}\n    {renderGPA(document)}\n    {renderSignature(document)}\n    {renderGradingSystem(document)}\n  </div>\n);\n\nTemplate.propTypes = {\n  document: PropTypes.object.isRequired\n};\nexport default Template;\n"]},"metadata":{},"sourceType":"module"}