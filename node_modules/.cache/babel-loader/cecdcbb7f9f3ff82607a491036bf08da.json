{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/OpenCerts/opencerts-renderer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _createForOfIteratorHelper = require(\"/OpenCerts/opencerts-renderer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hasExports = hasExports;\nexports.isSideEffectImport = isSideEffectImport;\nexports.default = normalizeModuleAndLoadMetadata;\n\nvar _path = require(\"path\");\n\nvar _helperSplitExportDeclaration = _interopRequireDefault(require(\"@babel/helper-split-export-declaration\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction hasExports(metadata) {\n  return metadata.hasExports;\n}\n\nfunction isSideEffectImport(source) {\n  return source.imports.size === 0 && source.importsNamespace.size === 0 && source.reexports.size === 0 && source.reexportNamespace.size === 0 && !source.reexportAll;\n}\n\nfunction normalizeModuleAndLoadMetadata(programPath, exportName) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref$noInterop = _ref.noInterop,\n      noInterop = _ref$noInterop === void 0 ? false : _ref$noInterop,\n      _ref$loose = _ref.loose,\n      loose = _ref$loose === void 0 ? false : _ref$loose,\n      _ref$lazy = _ref.lazy,\n      lazy = _ref$lazy === void 0 ? false : _ref$lazy,\n      _ref$esNamespaceOnly = _ref.esNamespaceOnly,\n      esNamespaceOnly = _ref$esNamespaceOnly === void 0 ? false : _ref$esNamespaceOnly;\n\n  if (!exportName) {\n    exportName = programPath.scope.generateUidIdentifier(\"exports\").name;\n  }\n\n  nameAnonymousExports(programPath);\n\n  var _getModuleMetadata = getModuleMetadata(programPath, {\n    loose: loose,\n    lazy: lazy\n  }),\n      local = _getModuleMetadata.local,\n      source = _getModuleMetadata.source,\n      hasExports = _getModuleMetadata.hasExports;\n\n  removeModuleDeclarations(programPath);\n\n  var _iterator = _createForOfIteratorHelper(source),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _slicedToArray(_step.value, 2),\n          metadata = _step$value[1];\n\n      if (metadata.importsNamespace.size > 0) {\n        metadata.name = metadata.importsNamespace.values().next().value;\n      }\n\n      if (noInterop) metadata.interop = \"none\";else if (esNamespaceOnly) {\n        if (metadata.interop === \"namespace\") {\n          metadata.interop = \"default\";\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return {\n    exportName: exportName,\n    exportNameListName: null,\n    hasExports: hasExports,\n    local: local,\n    source: source\n  };\n}\n\nfunction getModuleMetadata(programPath, _ref2) {\n  var loose = _ref2.loose,\n      lazy = _ref2.lazy;\n  var localData = getLocalExportMetadata(programPath, loose);\n  var sourceData = new Map();\n\n  var getData = function getData(sourceNode) {\n    var source = sourceNode.value;\n    var data = sourceData.get(source);\n\n    if (!data) {\n      data = {\n        name: programPath.scope.generateUidIdentifier((0, _path.basename)(source, (0, _path.extname)(source))).name,\n        interop: \"none\",\n        loc: null,\n        imports: new Map(),\n        importsNamespace: new Set(),\n        reexports: new Map(),\n        reexportNamespace: new Set(),\n        reexportAll: null,\n        lazy: false\n      };\n      sourceData.set(source, data);\n    }\n\n    return data;\n  };\n\n  var hasExports = false;\n  programPath.get(\"body\").forEach(function (child) {\n    if (child.isImportDeclaration()) {\n      var data = getData(child.node.source);\n      if (!data.loc) data.loc = child.node.loc;\n      child.get(\"specifiers\").forEach(function (spec) {\n        if (spec.isImportDefaultSpecifier()) {\n          var localName = spec.get(\"local\").node.name;\n          data.imports.set(localName, \"default\");\n          var reexport = localData.get(localName);\n\n          if (reexport) {\n            localData.delete(localName);\n            reexport.names.forEach(function (name) {\n              data.reexports.set(name, \"default\");\n            });\n          }\n        } else if (spec.isImportNamespaceSpecifier()) {\n          var _localName = spec.get(\"local\").node.name;\n          data.importsNamespace.add(_localName);\n\n          var _reexport = localData.get(_localName);\n\n          if (_reexport) {\n            localData.delete(_localName);\n\n            _reexport.names.forEach(function (name) {\n              data.reexportNamespace.add(name);\n            });\n          }\n        } else if (spec.isImportSpecifier()) {\n          var importName = spec.get(\"imported\").node.name;\n          var _localName2 = spec.get(\"local\").node.name;\n          data.imports.set(_localName2, importName);\n\n          var _reexport2 = localData.get(_localName2);\n\n          if (_reexport2) {\n            localData.delete(_localName2);\n\n            _reexport2.names.forEach(function (name) {\n              data.reexports.set(name, importName);\n            });\n          }\n        }\n      });\n    } else if (child.isExportAllDeclaration()) {\n      hasExports = true;\n\n      var _data = getData(child.node.source);\n\n      if (!_data.loc) _data.loc = child.node.loc;\n      _data.reexportAll = {\n        loc: child.node.loc\n      };\n    } else if (child.isExportNamedDeclaration() && child.node.source) {\n      hasExports = true;\n\n      var _data2 = getData(child.node.source);\n\n      if (!_data2.loc) _data2.loc = child.node.loc;\n      child.get(\"specifiers\").forEach(function (spec) {\n        if (!spec.isExportSpecifier()) {\n          throw spec.buildCodeFrameError(\"Unexpected export specifier type\");\n        }\n\n        var importName = spec.get(\"local\").node.name;\n        var exportName = spec.get(\"exported\").node.name;\n\n        _data2.reexports.set(exportName, importName);\n\n        if (exportName === \"__esModule\") {\n          throw exportName.buildCodeFrameError('Illegal export \"__esModule\".');\n        }\n      });\n    } else if (child.isExportNamedDeclaration() || child.isExportDefaultDeclaration()) {\n      hasExports = true;\n    }\n  });\n\n  var _iterator2 = _createForOfIteratorHelper(sourceData.values()),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var metadata = _step2.value;\n      var needsDefault = false;\n      var needsNamed = false;\n\n      if (metadata.importsNamespace.size > 0) {\n        needsDefault = true;\n        needsNamed = true;\n      }\n\n      if (metadata.reexportAll) {\n        needsNamed = true;\n      }\n\n      var _iterator4 = _createForOfIteratorHelper(metadata.imports.values()),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var importName = _step4.value;\n          if (importName === \"default\") needsDefault = true;else needsNamed = true;\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      var _iterator5 = _createForOfIteratorHelper(metadata.reexports.values()),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _importName = _step5.value;\n          if (_importName === \"default\") needsDefault = true;else needsNamed = true;\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      if (needsDefault && needsNamed) {\n        metadata.interop = \"namespace\";\n      } else if (needsDefault) {\n        metadata.interop = \"default\";\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  var _iterator3 = _createForOfIteratorHelper(sourceData),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var _step3$value = _slicedToArray(_step3.value, 2),\n          source = _step3$value[0],\n          _metadata = _step3$value[1];\n\n      if (lazy !== false && !(isSideEffectImport(_metadata) || _metadata.reexportAll)) {\n        if (lazy === true) {\n          _metadata.lazy = !/\\./.test(source);\n        } else if (Array.isArray(lazy)) {\n          _metadata.lazy = lazy.indexOf(source) !== -1;\n        } else if (typeof lazy === \"function\") {\n          _metadata.lazy = lazy(source);\n        } else {\n          throw new Error(\".lazy must be a boolean, string array, or function\");\n        }\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n\n  return {\n    hasExports: hasExports,\n    local: localData,\n    source: sourceData\n  };\n}\n\nfunction getLocalExportMetadata(programPath, loose) {\n  var bindingKindLookup = new Map();\n  programPath.get(\"body\").forEach(function (child) {\n    var kind;\n\n    if (child.isImportDeclaration()) {\n      kind = \"import\";\n    } else {\n      if (child.isExportDefaultDeclaration()) child = child.get(\"declaration\");\n\n      if (child.isExportNamedDeclaration()) {\n        if (child.node.declaration) {\n          child = child.get(\"declaration\");\n        } else if (loose && child.node.source && child.get(\"source\").isStringLiteral()) {\n          child.node.specifiers.forEach(function (specifier) {\n            bindingKindLookup.set(specifier.local.name, \"block\");\n          });\n          return;\n        }\n      }\n\n      if (child.isFunctionDeclaration()) {\n        kind = \"hoisted\";\n      } else if (child.isClassDeclaration()) {\n        kind = \"block\";\n      } else if (child.isVariableDeclaration({\n        kind: \"var\"\n      })) {\n        kind = \"var\";\n      } else if (child.isVariableDeclaration()) {\n        kind = \"block\";\n      } else {\n        return;\n      }\n    }\n\n    Object.keys(child.getOuterBindingIdentifiers()).forEach(function (name) {\n      bindingKindLookup.set(name, kind);\n    });\n  });\n  var localMetadata = new Map();\n\n  var getLocalMetadata = function getLocalMetadata(idPath) {\n    var localName = idPath.node.name;\n    var metadata = localMetadata.get(localName);\n\n    if (!metadata) {\n      var kind = bindingKindLookup.get(localName);\n\n      if (kind === undefined) {\n        throw idPath.buildCodeFrameError(\"Exporting local \\\"\".concat(localName, \"\\\", which is not declared.\"));\n      }\n\n      metadata = {\n        names: [],\n        kind: kind\n      };\n      localMetadata.set(localName, metadata);\n    }\n\n    return metadata;\n  };\n\n  programPath.get(\"body\").forEach(function (child) {\n    if (child.isExportNamedDeclaration() && (loose || !child.node.source)) {\n      if (child.node.declaration) {\n        var declaration = child.get(\"declaration\");\n        var ids = declaration.getOuterBindingIdentifierPaths();\n        Object.keys(ids).forEach(function (name) {\n          if (name === \"__esModule\") {\n            throw declaration.buildCodeFrameError('Illegal export \"__esModule\".');\n          }\n\n          getLocalMetadata(ids[name]).names.push(name);\n        });\n      } else {\n        child.get(\"specifiers\").forEach(function (spec) {\n          var local = spec.get(\"local\");\n          var exported = spec.get(\"exported\");\n\n          if (exported.node.name === \"__esModule\") {\n            throw exported.buildCodeFrameError('Illegal export \"__esModule\".');\n          }\n\n          getLocalMetadata(local).names.push(exported.node.name);\n        });\n      }\n    } else if (child.isExportDefaultDeclaration()) {\n      var _declaration = child.get(\"declaration\");\n\n      if (_declaration.isFunctionDeclaration() || _declaration.isClassDeclaration()) {\n        getLocalMetadata(_declaration.get(\"id\")).names.push(\"default\");\n      } else {\n        throw _declaration.buildCodeFrameError(\"Unexpected default expression export.\");\n      }\n    }\n  });\n  return localMetadata;\n}\n\nfunction nameAnonymousExports(programPath) {\n  programPath.get(\"body\").forEach(function (child) {\n    if (!child.isExportDefaultDeclaration()) return;\n    (0, _helperSplitExportDeclaration.default)(child);\n  });\n}\n\nfunction removeModuleDeclarations(programPath) {\n  programPath.get(\"body\").forEach(function (child) {\n    if (child.isImportDeclaration()) {\n      child.remove();\n    } else if (child.isExportNamedDeclaration()) {\n      if (child.node.declaration) {\n        child.node.declaration._blockHoist = child.node._blockHoist;\n        child.replaceWith(child.node.declaration);\n      } else {\n        child.remove();\n      }\n    } else if (child.isExportDefaultDeclaration()) {\n      var declaration = child.get(\"declaration\");\n\n      if (declaration.isFunctionDeclaration() || declaration.isClassDeclaration()) {\n        declaration._blockHoist = child.node._blockHoist;\n        child.replaceWith(declaration);\n      } else {\n        throw declaration.buildCodeFrameError(\"Unexpected default expression export.\");\n      }\n    } else if (child.isExportAllDeclaration()) {\n      child.remove();\n    }\n  });\n}","map":{"version":3,"sources":["/OpenCerts/opencerts-renderer/node_modules/@babel/helper-module-transforms/lib/normalize-and-load-metadata.js"],"names":["Object","defineProperty","exports","value","hasExports","isSideEffectImport","default","normalizeModuleAndLoadMetadata","_path","require","_helperSplitExportDeclaration","_interopRequireDefault","obj","__esModule","metadata","source","imports","size","importsNamespace","reexports","reexportNamespace","reexportAll","programPath","exportName","noInterop","loose","lazy","esNamespaceOnly","scope","generateUidIdentifier","name","nameAnonymousExports","getModuleMetadata","local","removeModuleDeclarations","values","next","interop","exportNameListName","localData","getLocalExportMetadata","sourceData","Map","getData","sourceNode","data","get","basename","extname","loc","Set","set","forEach","child","isImportDeclaration","node","spec","isImportDefaultSpecifier","localName","reexport","delete","names","isImportNamespaceSpecifier","add","isImportSpecifier","importName","isExportAllDeclaration","isExportNamedDeclaration","isExportSpecifier","buildCodeFrameError","isExportDefaultDeclaration","needsDefault","needsNamed","test","Array","isArray","indexOf","Error","bindingKindLookup","kind","declaration","isStringLiteral","specifiers","specifier","isFunctionDeclaration","isClassDeclaration","isVariableDeclaration","keys","getOuterBindingIdentifiers","localMetadata","getLocalMetadata","idPath","undefined","ids","getOuterBindingIdentifierPaths","push","exported","remove","_blockHoist","replaceWith"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hasExports = hasExports;\nexports.isSideEffectImport = isSideEffectImport;\nexports.default = normalizeModuleAndLoadMetadata;\n\nvar _path = require(\"path\");\n\nvar _helperSplitExportDeclaration = _interopRequireDefault(require(\"@babel/helper-split-export-declaration\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction hasExports(metadata) {\n  return metadata.hasExports;\n}\n\nfunction isSideEffectImport(source) {\n  return source.imports.size === 0 && source.importsNamespace.size === 0 && source.reexports.size === 0 && source.reexportNamespace.size === 0 && !source.reexportAll;\n}\n\nfunction normalizeModuleAndLoadMetadata(programPath, exportName, {\n  noInterop = false,\n  loose = false,\n  lazy = false,\n  esNamespaceOnly = false\n} = {}) {\n  if (!exportName) {\n    exportName = programPath.scope.generateUidIdentifier(\"exports\").name;\n  }\n\n  nameAnonymousExports(programPath);\n  const {\n    local,\n    source,\n    hasExports\n  } = getModuleMetadata(programPath, {\n    loose,\n    lazy\n  });\n  removeModuleDeclarations(programPath);\n\n  for (const [, metadata] of source) {\n    if (metadata.importsNamespace.size > 0) {\n      metadata.name = metadata.importsNamespace.values().next().value;\n    }\n\n    if (noInterop) metadata.interop = \"none\";else if (esNamespaceOnly) {\n      if (metadata.interop === \"namespace\") {\n        metadata.interop = \"default\";\n      }\n    }\n  }\n\n  return {\n    exportName,\n    exportNameListName: null,\n    hasExports,\n    local,\n    source\n  };\n}\n\nfunction getModuleMetadata(programPath, {\n  loose,\n  lazy\n}) {\n  const localData = getLocalExportMetadata(programPath, loose);\n  const sourceData = new Map();\n\n  const getData = sourceNode => {\n    const source = sourceNode.value;\n    let data = sourceData.get(source);\n\n    if (!data) {\n      data = {\n        name: programPath.scope.generateUidIdentifier((0, _path.basename)(source, (0, _path.extname)(source))).name,\n        interop: \"none\",\n        loc: null,\n        imports: new Map(),\n        importsNamespace: new Set(),\n        reexports: new Map(),\n        reexportNamespace: new Set(),\n        reexportAll: null,\n        lazy: false\n      };\n      sourceData.set(source, data);\n    }\n\n    return data;\n  };\n\n  let hasExports = false;\n  programPath.get(\"body\").forEach(child => {\n    if (child.isImportDeclaration()) {\n      const data = getData(child.node.source);\n      if (!data.loc) data.loc = child.node.loc;\n      child.get(\"specifiers\").forEach(spec => {\n        if (spec.isImportDefaultSpecifier()) {\n          const localName = spec.get(\"local\").node.name;\n          data.imports.set(localName, \"default\");\n          const reexport = localData.get(localName);\n\n          if (reexport) {\n            localData.delete(localName);\n            reexport.names.forEach(name => {\n              data.reexports.set(name, \"default\");\n            });\n          }\n        } else if (spec.isImportNamespaceSpecifier()) {\n          const localName = spec.get(\"local\").node.name;\n          data.importsNamespace.add(localName);\n          const reexport = localData.get(localName);\n\n          if (reexport) {\n            localData.delete(localName);\n            reexport.names.forEach(name => {\n              data.reexportNamespace.add(name);\n            });\n          }\n        } else if (spec.isImportSpecifier()) {\n          const importName = spec.get(\"imported\").node.name;\n          const localName = spec.get(\"local\").node.name;\n          data.imports.set(localName, importName);\n          const reexport = localData.get(localName);\n\n          if (reexport) {\n            localData.delete(localName);\n            reexport.names.forEach(name => {\n              data.reexports.set(name, importName);\n            });\n          }\n        }\n      });\n    } else if (child.isExportAllDeclaration()) {\n      hasExports = true;\n      const data = getData(child.node.source);\n      if (!data.loc) data.loc = child.node.loc;\n      data.reexportAll = {\n        loc: child.node.loc\n      };\n    } else if (child.isExportNamedDeclaration() && child.node.source) {\n      hasExports = true;\n      const data = getData(child.node.source);\n      if (!data.loc) data.loc = child.node.loc;\n      child.get(\"specifiers\").forEach(spec => {\n        if (!spec.isExportSpecifier()) {\n          throw spec.buildCodeFrameError(\"Unexpected export specifier type\");\n        }\n\n        const importName = spec.get(\"local\").node.name;\n        const exportName = spec.get(\"exported\").node.name;\n        data.reexports.set(exportName, importName);\n\n        if (exportName === \"__esModule\") {\n          throw exportName.buildCodeFrameError('Illegal export \"__esModule\".');\n        }\n      });\n    } else if (child.isExportNamedDeclaration() || child.isExportDefaultDeclaration()) {\n      hasExports = true;\n    }\n  });\n\n  for (const metadata of sourceData.values()) {\n    let needsDefault = false;\n    let needsNamed = false;\n\n    if (metadata.importsNamespace.size > 0) {\n      needsDefault = true;\n      needsNamed = true;\n    }\n\n    if (metadata.reexportAll) {\n      needsNamed = true;\n    }\n\n    for (const importName of metadata.imports.values()) {\n      if (importName === \"default\") needsDefault = true;else needsNamed = true;\n    }\n\n    for (const importName of metadata.reexports.values()) {\n      if (importName === \"default\") needsDefault = true;else needsNamed = true;\n    }\n\n    if (needsDefault && needsNamed) {\n      metadata.interop = \"namespace\";\n    } else if (needsDefault) {\n      metadata.interop = \"default\";\n    }\n  }\n\n  for (const [source, metadata] of sourceData) {\n    if (lazy !== false && !(isSideEffectImport(metadata) || metadata.reexportAll)) {\n      if (lazy === true) {\n        metadata.lazy = !/\\./.test(source);\n      } else if (Array.isArray(lazy)) {\n        metadata.lazy = lazy.indexOf(source) !== -1;\n      } else if (typeof lazy === \"function\") {\n        metadata.lazy = lazy(source);\n      } else {\n        throw new Error(`.lazy must be a boolean, string array, or function`);\n      }\n    }\n  }\n\n  return {\n    hasExports,\n    local: localData,\n    source: sourceData\n  };\n}\n\nfunction getLocalExportMetadata(programPath, loose) {\n  const bindingKindLookup = new Map();\n  programPath.get(\"body\").forEach(child => {\n    let kind;\n\n    if (child.isImportDeclaration()) {\n      kind = \"import\";\n    } else {\n      if (child.isExportDefaultDeclaration()) child = child.get(\"declaration\");\n\n      if (child.isExportNamedDeclaration()) {\n        if (child.node.declaration) {\n          child = child.get(\"declaration\");\n        } else if (loose && child.node.source && child.get(\"source\").isStringLiteral()) {\n          child.node.specifiers.forEach(specifier => {\n            bindingKindLookup.set(specifier.local.name, \"block\");\n          });\n          return;\n        }\n      }\n\n      if (child.isFunctionDeclaration()) {\n        kind = \"hoisted\";\n      } else if (child.isClassDeclaration()) {\n        kind = \"block\";\n      } else if (child.isVariableDeclaration({\n        kind: \"var\"\n      })) {\n        kind = \"var\";\n      } else if (child.isVariableDeclaration()) {\n        kind = \"block\";\n      } else {\n        return;\n      }\n    }\n\n    Object.keys(child.getOuterBindingIdentifiers()).forEach(name => {\n      bindingKindLookup.set(name, kind);\n    });\n  });\n  const localMetadata = new Map();\n\n  const getLocalMetadata = idPath => {\n    const localName = idPath.node.name;\n    let metadata = localMetadata.get(localName);\n\n    if (!metadata) {\n      const kind = bindingKindLookup.get(localName);\n\n      if (kind === undefined) {\n        throw idPath.buildCodeFrameError(`Exporting local \"${localName}\", which is not declared.`);\n      }\n\n      metadata = {\n        names: [],\n        kind\n      };\n      localMetadata.set(localName, metadata);\n    }\n\n    return metadata;\n  };\n\n  programPath.get(\"body\").forEach(child => {\n    if (child.isExportNamedDeclaration() && (loose || !child.node.source)) {\n      if (child.node.declaration) {\n        const declaration = child.get(\"declaration\");\n        const ids = declaration.getOuterBindingIdentifierPaths();\n        Object.keys(ids).forEach(name => {\n          if (name === \"__esModule\") {\n            throw declaration.buildCodeFrameError('Illegal export \"__esModule\".');\n          }\n\n          getLocalMetadata(ids[name]).names.push(name);\n        });\n      } else {\n        child.get(\"specifiers\").forEach(spec => {\n          const local = spec.get(\"local\");\n          const exported = spec.get(\"exported\");\n\n          if (exported.node.name === \"__esModule\") {\n            throw exported.buildCodeFrameError('Illegal export \"__esModule\".');\n          }\n\n          getLocalMetadata(local).names.push(exported.node.name);\n        });\n      }\n    } else if (child.isExportDefaultDeclaration()) {\n      const declaration = child.get(\"declaration\");\n\n      if (declaration.isFunctionDeclaration() || declaration.isClassDeclaration()) {\n        getLocalMetadata(declaration.get(\"id\")).names.push(\"default\");\n      } else {\n        throw declaration.buildCodeFrameError(\"Unexpected default expression export.\");\n      }\n    }\n  });\n  return localMetadata;\n}\n\nfunction nameAnonymousExports(programPath) {\n  programPath.get(\"body\").forEach(child => {\n    if (!child.isExportDefaultDeclaration()) return;\n    (0, _helperSplitExportDeclaration.default)(child);\n  });\n}\n\nfunction removeModuleDeclarations(programPath) {\n  programPath.get(\"body\").forEach(child => {\n    if (child.isImportDeclaration()) {\n      child.remove();\n    } else if (child.isExportNamedDeclaration()) {\n      if (child.node.declaration) {\n        child.node.declaration._blockHoist = child.node._blockHoist;\n        child.replaceWith(child.node.declaration);\n      } else {\n        child.remove();\n      }\n    } else if (child.isExportDefaultDeclaration()) {\n      const declaration = child.get(\"declaration\");\n\n      if (declaration.isFunctionDeclaration() || declaration.isClassDeclaration()) {\n        declaration._blockHoist = child.node._blockHoist;\n        child.replaceWith(declaration);\n      } else {\n        throw declaration.buildCodeFrameError(\"Unexpected default expression export.\");\n      }\n    } else if (child.isExportAllDeclaration()) {\n      child.remove();\n    }\n  });\n}"]},"metadata":{},"sourceType":"script"}