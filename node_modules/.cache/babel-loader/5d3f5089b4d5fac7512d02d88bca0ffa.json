{"ast":null,"code":"var _jsxFileName = \"/OpenCerts/demo-opencerts-renderer/src/components/templates/RPTemplate/2020-P-MAIN/index.js\";\nimport PropTypes from \"prop-types\";\nimport MultiCertificateRenderer from \"template-utils/MultiCertificateRenderer\";\nimport { approvedAddresses } from \"../common\";\nimport RPCert from \"./certificate\";\nimport RPTranscript from \"../common/transcript\";\nconst templates = [{\n  id: \"certificate\",\n  label: \"Certificate\",\n  template: RPCert\n}, {\n  id: \"transcript\",\n  label: \"Transcript\",\n  template: RPTranscript\n}];\n\nconst RPAA2018PMAIN = props => /*#__PURE__*/React.createElement(MultiCertificateRenderer, Object.assign({\n  templates: templates,\n  whitelist: approvedAddresses\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }\n}));\n\nRPAA2018PMAIN.displayName = \"2018-P-MAIN Template\";\nRPAA2018PMAIN.propTypes = {\n  certificate: PropTypes.object.isRequired\n};\nexport default RPAA2018PMAIN;","map":{"version":3,"sources":["/OpenCerts/demo-opencerts-renderer/src/components/templates/RPTemplate/2020-P-MAIN/index.js"],"names":["PropTypes","MultiCertificateRenderer","approvedAddresses","RPCert","RPTranscript","templates","id","label","template","RPAA2018PMAIN","props","displayName","propTypes","certificate","object","isRequired"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,wBAAP,MAAqC,yCAArC;AACA,SAASC,iBAAT,QAAkC,WAAlC;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AAEA,MAAMC,SAAS,GAAG,CAChB;AACEC,EAAAA,EAAE,EAAE,aADN;AAEEC,EAAAA,KAAK,EAAE,aAFT;AAGEC,EAAAA,QAAQ,EAAEL;AAHZ,CADgB,EAMhB;AACEG,EAAAA,EAAE,EAAE,YADN;AAEEC,EAAAA,KAAK,EAAE,YAFT;AAGEC,EAAAA,QAAQ,EAAEJ;AAHZ,CANgB,CAAlB;;AAaA,MAAMK,aAAa,GAAGC,KAAK,iBACzB,oBAAC,wBAAD;AACE,EAAA,SAAS,EAAEL,SADb;AAEE,EAAA,SAAS,EAAEH;AAFb,GAGMQ,KAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAQAD,aAAa,CAACE,WAAd,GAA4B,sBAA5B;AACAF,aAAa,CAACG,SAAd,GAA0B;AACxBC,EAAAA,WAAW,EAAEb,SAAS,CAACc,MAAV,CAAiBC;AADN,CAA1B;AAIA,eAAeN,aAAf","sourcesContent":["import PropTypes from \"prop-types\";\nimport MultiCertificateRenderer from \"template-utils/MultiCertificateRenderer\";\nimport { approvedAddresses } from \"../common\";\nimport RPCert from \"./certificate\";\nimport RPTranscript from \"../common/transcript\";\n\nconst templates = [\n  {\n    id: \"certificate\",\n    label: \"Certificate\",\n    template: RPCert\n  },\n  {\n    id: \"transcript\",\n    label: \"Transcript\",\n    template: RPTranscript\n  }\n];\n\nconst RPAA2018PMAIN = props => (\n  <MultiCertificateRenderer\n    templates={templates}\n    whitelist={approvedAddresses}\n    {...props}\n  />\n);\n\nRPAA2018PMAIN.displayName = \"2018-P-MAIN Template\";\nRPAA2018PMAIN.propTypes = {\n  certificate: PropTypes.object.isRequired\n};\n\nexport default RPAA2018PMAIN;\n"]},"metadata":{},"sourceType":"module"}