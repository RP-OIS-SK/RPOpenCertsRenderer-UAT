{"ast":null,"code":"var _jsxFileName = \"/OpenCerts/opencerts-renderer/src/components/documentViewer/documentViewerContainer.js\";\nimport React, { Component } from \"react\";\nimport styles from \"../certificateViewer.scss\";\nimport connectToParent from \"penpal/lib/connectToParent\";\nimport DocumentViewer from \"./documentViewer\";\nimport { documentTemplateTabs, inIframe } from \"./utils\";\n\nclass DocumentViewerContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDocumentChange = this.handleDocumentChange.bind(this);\n    this.selectTemplateTab = this.selectTemplateTab.bind(this);\n    this.updateParentHeight = this.updateParentHeight.bind(this);\n    this.updateParentTemplateTabs = this.updateParentTemplateTabs.bind(this);\n    this.handleObfuscation = this.handleObfuscation.bind(this);\n    this.state = {\n      parentFrameConnection: null,\n      document: null,\n      tabIndex: 0,\n      templates: null\n    };\n  }\n\n  updateHeightWhenResize() {\n    window.addEventListener(\"resize\", this.updateParentHeight);\n  } // Use postMessage to update iframe's parent to scale the height\n\n\n  async updateParentHeight() {\n    if (inIframe()) {\n      const {\n        parentFrameConnection\n      } = this.state;\n      const parent = await parentFrameConnection;\n      if (parent.updateHeight) await parent.updateHeight(document.documentElement.offsetHeight);\n    }\n  } // Use postMessage to update iframe's parent onw the selection of templates available for this document\n\n\n  async updateParentTemplateTabs() {\n    const templates = await documentTemplateTabs(this.state.document);\n    this.setState({\n      templates\n    });\n\n    if (inIframe()) {\n      const {\n        parentFrameConnection\n      } = this.state;\n      const parent = await parentFrameConnection;\n\n      if (parent.updateTemplates) {\n        await parent.updateTemplates(documentTemplateTabs(this.state.document));\n      }\n    }\n  }\n\n  async handleObfuscation(field) {\n    if (inIframe()) {\n      const {\n        parentFrameConnection\n      } = this.state;\n      const parent = await parentFrameConnection;\n\n      if (parent.handleObfuscation) {\n        parent.handleObfuscation(field);\n      }\n    }\n  }\n\n  async selectTemplateTab(tabIndex) {\n    this.setState({\n      tabIndex\n    });\n  }\n\n  handleDocumentChange(document) {\n    this.setState({\n      document\n    });\n    this.updateParentTemplateTabs();\n  }\n\n  componentDidUpdate() {\n    this.updateParentHeight();\n  }\n\n  componentDidMount() {\n    const renderDocument = this.handleDocumentChange;\n    const selectTemplateTab = this.selectTemplateTab;\n\n    const getTemplates = () => this.state.templates;\n\n    window.openAttestation = {\n      renderDocument,\n      selectTemplateTab,\n      getTemplates\n    };\n\n    if (inIframe()) {\n      const parentFrameConnection = connectToParent({\n        methods: {\n          renderDocument,\n          selectTemplateTab\n        }\n      }).promise;\n      this.setState({\n        parentFrameConnection\n      });\n    }\n\n    this.updateHeightWhenResize();\n  }\n\n  render() {\n    if (!this.state.document) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"frameless-tabs\",\n      id: \"rendered-certificate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DocumentViewer, {\n      id: styles[\"frameless-container\"],\n      document: this.state.document,\n      tabIndex: this.state.tabIndex,\n      handleHeightUpdate: this.updateParentHeight,\n      handleObfuscation: this.handleObfuscation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default DocumentViewerContainer;","map":{"version":3,"sources":["/OpenCerts/opencerts-renderer/src/components/documentViewer/documentViewerContainer.js"],"names":["React","Component","styles","connectToParent","DocumentViewer","documentTemplateTabs","inIframe","DocumentViewerContainer","constructor","props","handleDocumentChange","bind","selectTemplateTab","updateParentHeight","updateParentTemplateTabs","handleObfuscation","state","parentFrameConnection","document","tabIndex","templates","updateHeightWhenResize","window","addEventListener","parent","updateHeight","documentElement","offsetHeight","setState","updateTemplates","field","componentDidUpdate","componentDidMount","renderDocument","getTemplates","openAttestation","methods","promise","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport styles from \"../certificateViewer.scss\";\nimport connectToParent from \"penpal/lib/connectToParent\";\nimport DocumentViewer from \"./documentViewer\";\nimport { documentTemplateTabs, inIframe } from \"./utils\";\n\nclass DocumentViewerContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDocumentChange = this.handleDocumentChange.bind(this);\n    this.selectTemplateTab = this.selectTemplateTab.bind(this);\n    this.updateParentHeight = this.updateParentHeight.bind(this);\n    this.updateParentTemplateTabs = this.updateParentTemplateTabs.bind(this);\n    this.handleObfuscation = this.handleObfuscation.bind(this);\n    this.state = {\n      parentFrameConnection: null,\n      document: null,\n      tabIndex: 0,\n      templates: null\n    };\n  }\n\n  updateHeightWhenResize() {\n    window.addEventListener(\"resize\", this.updateParentHeight);\n  }\n\n  // Use postMessage to update iframe's parent to scale the height\n  async updateParentHeight() {\n    if (inIframe()) {\n      const { parentFrameConnection } = this.state;\n      const parent = await parentFrameConnection;\n      if (parent.updateHeight)\n        await parent.updateHeight(document.documentElement.offsetHeight);\n    }\n  }\n\n  // Use postMessage to update iframe's parent onw the selection of templates available for this document\n  async updateParentTemplateTabs() {\n    const templates = await documentTemplateTabs(this.state.document);\n    this.setState({ templates });\n    if (inIframe()) {\n      const { parentFrameConnection } = this.state;\n      const parent = await parentFrameConnection;\n      if (parent.updateTemplates) {\n        await parent.updateTemplates(documentTemplateTabs(this.state.document));\n      }\n    }\n  }\n\n  async handleObfuscation(field) {\n    if (inIframe()) {\n      const { parentFrameConnection } = this.state;\n      const parent = await parentFrameConnection;\n      if (parent.handleObfuscation) {\n        parent.handleObfuscation(field);\n      }\n    }\n  }\n\n  async selectTemplateTab(tabIndex) {\n    this.setState({ tabIndex });\n  }\n\n  handleDocumentChange(document) {\n    this.setState({ document });\n    this.updateParentTemplateTabs();\n  }\n\n  componentDidUpdate() {\n    this.updateParentHeight();\n  }\n\n  componentDidMount() {\n    const renderDocument = this.handleDocumentChange;\n    const selectTemplateTab = this.selectTemplateTab;\n    const getTemplates = () => this.state.templates;\n\n    window.openAttestation = {\n      renderDocument,\n      selectTemplateTab,\n      getTemplates\n    };\n\n    if (inIframe()) {\n      const parentFrameConnection = connectToParent({\n        methods: {\n          renderDocument,\n          selectTemplateTab\n        }\n      }).promise;\n      this.setState({ parentFrameConnection });\n    }\n    this.updateHeightWhenResize();\n  }\n\n  render() {\n    if (!this.state.document) {\n      return null;\n    }\n    return (\n      <div className=\"frameless-tabs\" id=\"rendered-certificate\">\n        <DocumentViewer\n          id={styles[\"frameless-container\"]}\n          document={this.state.document}\n          tabIndex={this.state.tabIndex}\n          handleHeightUpdate={this.updateParentHeight}\n          handleObfuscation={this.handleObfuscation}\n        />\n      </div>\n    );\n  }\n}\nexport default DocumentViewerContainer;\n"]},"metadata":{},"sourceType":"module"}