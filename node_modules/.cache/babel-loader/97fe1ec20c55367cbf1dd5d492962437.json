{"ast":null,"code":"import React from\"react\";import PdfRenderer from\"./pdfRenderer\";import NullRenderer from\"./nullRenderer\";// Generates a template function depending on attachment type\nexport var attachmentTemplateSelector=function attachmentTemplateSelector(_ref){var attachment=_ref.attachment,handleHeightUpdate=_ref.handleHeightUpdate;var type=attachment.type;var AttachmentRenderer;switch(type){case\"application/pdf\":AttachmentRenderer=PdfRenderer;break;default:AttachmentRenderer=NullRenderer;}var template=function template(){return/*#__PURE__*/React.createElement(AttachmentRenderer,{attachment:attachment,handleHeightUpdate:handleHeightUpdate});};return template;};var attachmentToTemplates=function attachmentToTemplates(attachments,handleHeightUpdate){return attachments.map(function(attachment,index){return{id:\"attachment-\".concat(index),label:attachment.filename,template:attachmentTemplateSelector({attachment:attachment,handleHeightUpdate:handleHeightUpdate})};});};export default attachmentToTemplates;","map":{"version":3,"sources":["/OpenCerts/opencerts-renderer/src/components/attachmentTemplates/index.js"],"names":["React","PdfRenderer","NullRenderer","attachmentTemplateSelector","attachment","handleHeightUpdate","type","AttachmentRenderer","template","attachmentToTemplates","attachments","map","index","id","label","filename"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA;AACA,MAAO,IAAMC,CAAAA,0BAA0B,CAAG,QAA7BA,CAAAA,0BAA6B,MAGpC,IAFJC,CAAAA,UAEI,MAFJA,UAEI,CADJC,kBACI,MADJA,kBACI,IACIC,CAAAA,IADJ,CACaF,UADb,CACIE,IADJ,CAEJ,GAAIC,CAAAA,kBAAJ,CAEA,OAAQD,IAAR,EACE,IAAK,iBAAL,CACEC,kBAAkB,CAAGN,WAArB,CACA,MACF,QACEM,kBAAkB,CAAGL,YAArB,CALJ,CAQA,GAAMM,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,sBACf,oBAAC,kBAAD,EACE,UAAU,CAAEJ,UADd,CAEE,kBAAkB,CAAEC,kBAFtB,EADe,EAAjB,CAOA,MAAOG,CAAAA,QAAP,CACD,CAvBM,CA8BP,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,WAAD,CAAcL,kBAAd,CAAqC,CACjE,MAAOK,CAAAA,WAAW,CAACC,GAAZ,CAAgB,SAACP,UAAD,CAAaQ,KAAb,CAAuB,CAC5C,MAAO,CACLC,EAAE,sBAAgBD,KAAhB,CADG,CAELE,KAAK,CAAEV,UAAU,CAACW,QAFb,CAGLP,QAAQ,CAAEL,0BAA0B,CAAC,CAAEC,UAAU,CAAVA,UAAF,CAAcC,kBAAkB,CAAlBA,kBAAd,CAAD,CAH/B,CAAP,CAKD,CANM,CAAP,CAOD,CARD,CAUA,cAAeI,CAAAA,qBAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PdfRenderer from \"./pdfRenderer\";\nimport NullRenderer from \"./nullRenderer\";\n\n// Generates a template function depending on attachment type\nexport const attachmentTemplateSelector = ({\n  attachment,\n  handleHeightUpdate\n}) => {\n  const { type } = attachment;\n  let AttachmentRenderer;\n\n  switch (type) {\n    case \"application/pdf\":\n      AttachmentRenderer = PdfRenderer;\n      break;\n    default:\n      AttachmentRenderer = NullRenderer;\n  }\n\n  const template = () => (\n    <AttachmentRenderer\n      attachment={attachment}\n      handleHeightUpdate={handleHeightUpdate}\n    />\n  );\n\n  return template;\n};\n\nattachmentTemplateSelector.propTypes = {\n  attachment: PropTypes.object.isRequired,\n  handleHeightUpdate: PropTypes.func.isRequired\n};\n\nconst attachmentToTemplates = (attachments, handleHeightUpdate) => {\n  return attachments.map((attachment, index) => {\n    return {\n      id: `attachment-${index}`,\n      label: attachment.filename,\n      template: attachmentTemplateSelector({ attachment, handleHeightUpdate })\n    };\n  });\n};\n\nexport default attachmentToTemplates;\n"]},"metadata":{},"sourceType":"module"}